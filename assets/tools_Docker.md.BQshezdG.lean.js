import{_ as n,c as a,a2 as e,o as l}from"./chunks/framework.BPuE4Feg.js";const u=JSON.parse('{"title":"Docker","description":"","frontmatter":{},"headers":[],"relativePath":"tools/Docker.md","filePath":"tools/Docker.md"}'),p={name:"tools/Docker.md"};function o(r,s,c,t,i,d){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">​</a></h1><h2 id="安装docker-desktop" tabindex="-1">安装Docker Desktop <a class="header-anchor" href="#安装docker-desktop" aria-label="Permalink to &quot;安装Docker Desktop&quot;">​</a></h2><h3 id="下载安装包" tabindex="-1">下载安装包 <a class="header-anchor" href="#下载安装包" aria-label="Permalink to &quot;下载安装包&quot;">​</a></h3><p><a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noreferrer">官网下载安装包</a></p><h3 id="换源" tabindex="-1">换源 <a class="header-anchor" href="#换源" aria-label="Permalink to &quot;换源&quot;">​</a></h3><p>首先,我们打开Docker的设置，选择Docker Engine，设置docker镜像源</p><h4 id="国内docker镜像源" tabindex="-1">国内docker镜像源 <a class="header-anchor" href="#国内docker镜像源" aria-label="Permalink to &quot;国内docker镜像源&quot;">​</a></h4><ul><li>azure - <a href="http://dockerhub.azk8s.cn" target="_blank" rel="noreferrer">http://dockerhub.azk8s.cn</a></li><li>tencent - <a href="https://mirror.ccs.tencentyun.com" target="_blank" rel="noreferrer">https://mirror.ccs.tencentyun.com</a></li><li>daocloud - <a href="http://f1361db2.m.daocloud.io" target="_blank" rel="noreferrer">http://f1361db2.m.daocloud.io</a></li><li>netease - <a href="http://hub-mirror.c.163.com" target="_blank" rel="noreferrer">http://hub-mirror.c.163.com</a></li><li>ustc - <a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noreferrer">https://docker.mirrors.ustc.edu.cn</a></li><li>aliyun - <a href="https://2h3po24q.mirror.aliyuncs.com" target="_blank" rel="noreferrer">https://2h3po24q.mirror.aliyuncs.com</a></li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;registry-mirrors&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#98C379;">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;insecure-registries&quot;</span><span style="color:#ABB2BF;">: [],</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;debug&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;experimental&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="docker基础使用" tabindex="-1">Docker基础使用 <a class="header-anchor" href="#docker基础使用" aria-label="Permalink to &quot;Docker基础使用&quot;">​</a></h2><h3 id="官方示例" tabindex="-1">官方示例 <a class="header-anchor" href="#官方示例" aria-label="Permalink to &quot;官方示例&quot;">​</a></h3><p>入门教程，全自动生成本地学习docker网站</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -d</span><span style="color:#D19A66;"> -p</span><span style="color:#98C379;"> 80:80</span><span style="color:#98C379;"> docker/getting-started</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="对docker操作" tabindex="-1">对Docker操作 <a class="header-anchor" href="#对docker操作" aria-label="Permalink to &quot;对Docker操作&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 启动</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> service</span><span style="color:#98C379;"> docker</span><span style="color:#98C379;"> start</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 重启</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> service</span><span style="color:#98C379;"> docker</span><span style="color:#98C379;"> restart</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 停止</span></span>
<span class="line"><span style="color:#61AFEF;">sudo</span><span style="color:#98C379;"> service</span><span style="color:#98C379;"> docker</span><span style="color:#98C379;"> stop</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="对镜像操作" tabindex="-1">对镜像操作 <a class="header-anchor" href="#对镜像操作" aria-label="Permalink to &quot;对镜像操作&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 获取镜像列表</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> images</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 拉取镜像</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> pull</span><span style="color:#98C379;"> 镜像名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 删除镜像</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> rmi</span><span style="color:#98C379;"> 镜像名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 加载镜像</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> run</span><span style="color:#98C379;"> 镜像名称</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 打包镜像</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> 镜像名称</span><span style="color:#98C379;"> 路径</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="对容器操作" tabindex="-1">对容器操作 <a class="header-anchor" href="#对容器操作" aria-label="Permalink to &quot;对容器操作&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 查看容器</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> ps</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 启动容器</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> start</span><span style="color:#98C379;"> 容器名或id</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 停止容器</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> stop</span><span style="color:#98C379;"> 容器名或id</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 强制关闭容器</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> kill</span><span style="color:#98C379;"> 容器名或id</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 删除容器</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> rm</span><span style="color:#98C379;"> 容器名或id</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="容器制作成镜像" tabindex="-1">容器制作成镜像 <a class="header-anchor" href="#容器制作成镜像" aria-label="Permalink to &quot;容器制作成镜像&quot;">​</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 容器做成镜像</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> commit</span><span style="color:#98C379;"> 容器名</span><span style="color:#98C379;"> 镜像名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 镜像打包备份</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> save</span><span style="color:#D19A66;"> -o</span><span style="color:#98C379;"> 保存的文件名</span><span style="color:#98C379;"> 镜像名</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 镜像解压</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> load</span><span style="color:#D19A66;"> -i</span><span style="color:#98C379;"> 文件路径/备份文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="使用dockerfile部署静态文件" tabindex="-1">使用Dockerfile部署静态文件 <a class="header-anchor" href="#使用dockerfile部署静态文件" aria-label="Permalink to &quot;使用Dockerfile部署静态文件&quot;">​</a></h2><p>如：把vue编译产出的代码（dist文件夹）打包成docker镜像并加载</p><h3 id="创建dockerfile" tabindex="-1">创建Dockerfile <a class="header-anchor" href="#创建dockerfile" aria-label="Permalink to &quot;创建Dockerfile&quot;">​</a></h3><p>和dist文件夹放在一起</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span># 设置nginx</span></span>
<span class="line"><span>FROM nginx:latest</span></span>
<span class="line"><span># 将dist文件夹中内容复制到 /usr/share/nginx/html 目录</span></span>
<span class="line"><span>COPY dist /usr/share/nginx/html</span></span>
<span class="line"><span># 用本地的default.conf 配置文件替换nginx镜像里的默认配置</span></span>
<span class="line"><span>COPY default.conf /etc/nginx/conf.d/default.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="创建default-conf" tabindex="-1">创建default.conf <a class="header-anchor" href="#创建default-conf" aria-label="Permalink to &quot;创建default.conf&quot;">​</a></h3><p>其中配置的8080作为docker内部的端口号</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>server {</span></span>
<span class="line"><span>    listen       8080;</span></span>
<span class="line"><span>    server_name  localhost;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    #charset koi8-r;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    #access_log  logs/host.access.log  main;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    location / {</span></span>
<span class="line"><span>        root   /usr/share/nginx/html/;</span></span>
<span class="line"><span>        index  index.html index.htm;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    #error_page  404              /404.html;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # redirect server error pages to the static page /50x.html</span></span>
<span class="line"><span>    #</span></span>
<span class="line"><span>    error_page   500 502 503 504  /50x.html;</span></span>
<span class="line"><span>    location = /50x.html {</span></span>
<span class="line"><span>        root   /usr/share/nginx/html/;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>打包镜像</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> docker-demo</span><span style="color:#98C379;"> .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>加载容器，端口号A:B，A是本机访问使用，B是docker镜像端口</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -dp</span><span style="color:#98C379;"> 9002:8080</span><span style="color:#D19A66;"> --name</span><span style="color:#98C379;"> docker-demo</span><span style="color:#98C379;"> docker-demo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>打开浏览器可以查看<code>http://localhost:9002</code></p><h3 id="快捷脚本" tabindex="-1">快捷脚本 <a class="header-anchor" href="#快捷脚本" aria-label="Permalink to &quot;快捷脚本&quot;">​</a></h3><p>clean.sh</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 执行脚本需要传递参数，容器$1和镜像$2,只传递一个默认容器和镜像同名</span></span>
<span class="line"><span style="color:#E06C75;">container</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;font-style:italic;">$1</span></span>
<span class="line"><span style="color:#E06C75;">image</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;font-style:italic;">$1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> [ </span><span style="color:#E06C75;font-style:italic;">$2</span><span style="color:#ABB2BF;"> ]; </span><span style="color:#C678DD;">then</span></span>
<span class="line"><span style="color:#E06C75;">image</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;font-style:italic;">$2</span></span>
<span class="line"><span style="color:#C678DD;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;清理可能存在的同名容器</span><span style="color:#E06C75;">$container</span><span style="color:#98C379;"> 和镜像</span><span style="color:#E06C75;">$image</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;停止容器&quot;</span><span style="color:#E06C75;"> $container</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> stop</span><span style="color:#E06C75;"> $container</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;删除容器&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> rm</span><span style="color:#E06C75;"> $container</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;删除镜像&quot;</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> rmi</span><span style="color:#E06C75;"> $image</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;清理结束&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 正常退出，可执行后续操作</span></span>
<span class="line"><span style="color:#56B6C2;">exit</span><span style="color:#D19A66;"> 0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">​</a></h3><p>A机生成镜像，打包成tar文件，发送到服务器B机</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> build</span><span style="color:#D19A66;"> -t</span><span style="color:#98C379;"> docker-demo</span><span style="color:#98C379;"> .</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> save</span><span style="color:#D19A66;"> -o</span><span style="color:#98C379;"> docker-demo.tar</span><span style="color:#98C379;"> docker-demo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>B机解压tar文件后加载镜像</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> load</span><span style="color:#D19A66;"> -i</span><span style="color:#98C379;"> ./docker-demo.tar</span></span>
<span class="line"><span style="color:#61AFEF;">docker</span><span style="color:#98C379;"> run</span><span style="color:#D19A66;"> -dp</span><span style="color:#98C379;"> 9002:8080</span><span style="color:#D19A66;"> --name</span><span style="color:#98C379;"> docker-demo</span><span style="color:#98C379;"> docker-demo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="整合命令" tabindex="-1">整合命令 <a class="header-anchor" href="#整合命令" aria-label="Permalink to &quot;整合命令&quot;">​</a></h3><p>package.json</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;name&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;docker-demo&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;1.0.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;description&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;docker-demo&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;scripts&quot;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;start&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;sh clean.sh docker-demo &amp;&amp; docker build -t docker-demo . &amp;&amp; docker run -dp 9002:8080 --name docker-demo docker-demo&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;save&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;sh clean.sh docker-demo &amp;&amp; docker build -t docker-demo . &amp;&amp; docker save -o docker-demo.tar docker-demo&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    &quot;load&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;sh clean.sh docker-demo &amp;&amp; docker load -i ./docker-demo.tar &amp;&amp; docker run -dp 9002:8080 --name docker-demo docker-demo&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;">  &quot;license&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;ISC&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,45)]))}const m=n(p,[["render",o]]);export{u as __pageData,m as default};
