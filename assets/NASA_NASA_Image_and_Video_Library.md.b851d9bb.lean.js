import{d as f,h as l,a5 as y,o as n,c as o,a6 as A,a7 as k,C as e,F as p,R as I,a as m,t as d,G as u,_ as N,H as P,J as g,E as T}from"./chunks/framework.9805713b.js";const S=["disabled"],x={class:"imgList"},V=["onClick","src"],C={key:0,class:"bigImg"},L=["src"],$=f({__name:"library",setup(v){const r=l("earth"),c=l([]),s=l({}),_=l(!1);function b(i){s.value={...i},_.value=!0}function h(){fetch(`https://images-api.nasa.gov/search?q=${r.value}`).then(i=>i.json()).then(i=>{c.value=i.collection.items.map(a=>({...a.data[0],img:a.links?a.links[0].href:"",video:a.links?a.links[0].href.replace("thumb.jpg","small.mp4"):""})).filter(a=>a.media_type==="video")})}return y(()=>{h()}),(i,a)=>(n(),o(p,null,[A(e("input",{type:"text","onUpdate:modelValue":a[0]||(a[0]=t=>r.value=t)},null,512),[[k,r.value]]),e("button",{disabled:!r.value,onClick:h},"搜索",8,S),e("div",x,[(n(!0),o(p,null,I(c.value,t=>(n(),o("div",{class:"imgList-item",key:t.nasa_id},[e("div",null,d(t.date_created),1),e("p",null,d(t.title),1),t.img?(n(),o("img",{key:0,onClick:D=>b(t),src:t.img,alt:""},null,8,V)):u("",!0)]))),128))]),_.value?(n(),o("div",C,[m(d(s.value.title)+" ",1),e("span",{onClick:a[1]||(a[1]=t=>_.value=!1)},"X"),s.value.video?(n(),o("video",{key:0,class:"bigImg-video",controls:"",src:s.value.video},null,8,L)):u("",!0),e("p",null,d(s.value.description),1)])):u("",!0)],64))}});const w=N($,[["__scopeId","data-v-a9115921"]]),O=e("h1",{id:"nasa-image-and-video-library",tabindex:"-1"},[m("NASA Image and Video Library "),e("a",{class:"header-anchor",href:"#nasa-image-and-video-library","aria-label":'Permalink to "NASA Image and Video Library"'},"​")],-1),B=e("blockquote",null,[e("p",null,"The images.nasa.gov API is organized around REST, has predictable/resource­-oriented URLs and uses HTTP response codes to indicate API errors. This API uses built-­in HTTP features such as HTTP authentication and HTTP verbs, which are understood by many off-­the-­shelf HTTP clients. Please note that JSON is returned by all API responses, including errors. Each of the endpoints described below also contains example snippets which use the curl command­-line tool, Unix pipelines, and the python command­-line tool to output API responses in an easy­ to ­read format.")],-1),E=e("h2",{id:"more",tabindex:"-1"},[m("MORE "),e("a",{class:"header-anchor",href:"#more","aria-label":'Permalink to "MORE"'},"​")],-1),H=e("p",null,[e("a",{href:"https://images.nasa.gov/docs/images.nasa.gov_api_docs.pdf",target:"_blank",rel:"noreferrer"},"NASA Image and Video Library API documentation.")],-1),j=JSON.parse('{"title":"NASA Image and Video Library","description":"","frontmatter":{},"headers":[],"relativePath":"NASA/NASA_Image_and_Video_Library.md","filePath":"NASA/NASA_Image_and_Video_Library.md"}'),R={name:"NASA/NASA_Image_and_Video_Library.md"},q=Object.assign(R,{setup(v){return(r,c)=>{const s=P("ClientOnly");return n(),o("div",null,[O,B,g(s,null,{default:T(()=>[g(w)]),_:1}),E,H])}}});export{j as __pageData,q as default};
