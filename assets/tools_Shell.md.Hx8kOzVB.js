import{_ as s,c as a,o as n,R as l}from"./chunks/framework.zaQn3Cfr.js";const h=JSON.parse('{"title":"Shell Script","description":"","frontmatter":{},"headers":[],"relativePath":"tools/Shell.md","filePath":"tools/Shell.md"}'),e={name:"tools/Shell.md"},p=l(`<h1 id="shell-script" tabindex="-1">Shell Script <a class="header-anchor" href="#shell-script" aria-label="Permalink to &quot;Shell Script&quot;">​</a></h1><p>Shell 脚本（shell script），是一种为 shell 编写的脚本程序。</p><h2 id="第一个shell脚本" tabindex="-1">第一个shell脚本 <a class="header-anchor" href="#第一个shell脚本" aria-label="Permalink to &quot;第一个shell脚本&quot;">​</a></h2><p>test.sh</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;Hello World !&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>定义脚本类型 #!/bin/bash</li><li>输出信息 echo</li></ul><p>在终端文件同级目录运行文件</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sh</span><span style="color:#98C379;"> test.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>终端输出</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>Hello World !</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="shell-变量" tabindex="-1">Shell 变量 <a class="header-anchor" href="#shell-变量" aria-label="Permalink to &quot;Shell 变量&quot;">​</a></h2><h3 id="定义变量" tabindex="-1">定义变量 <a class="header-anchor" href="#定义变量" aria-label="Permalink to &quot;定义变量&quot;">​</a></h3><p>注意，变量名和等号之间不能有空格，这可能和你熟悉的所有编程语言都不一样。同时，变量名的命名须遵循如下规则：</p><ul><li>命名只能使用英文字母，数字和下划线，首个字符不能以数字开头。</li><li>中间不能有空格，可以使用下划线 _。</li><li>不能使用标点符号。</li><li>不能使用bash里的关键字（可用help命令查看保留关键字）。</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">hello</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;Hello World !&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="使用变量" tabindex="-1">使用变量 <a class="header-anchor" href="#使用变量" aria-label="Permalink to &quot;使用变量&quot;">​</a></h3><p>使用一个定义过的变量，只要在变量名前面加美元符号即可</p><p>变量名外面的花括号是可选的，加不加都行，加花括号是为了帮助解释器识别变量的边界</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">hello</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;Hello World !&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#E06C75;"> $hello</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#ABB2BF;"> \${</span><span style="color:#E06C75;">hello</span><span style="color:#ABB2BF;">}</span><span style="color:#98C379;">xxx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="只读变量" tabindex="-1">只读变量 <a class="header-anchor" href="#只读变量" aria-label="Permalink to &quot;只读变量&quot;">​</a></h3><p>使用 readonly 命令可以将变量定义为只读变量，只读变量的值不能被改变</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">myName</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;abc&quot;</span></span>
<span class="line"><span style="color:#C678DD;">readonly</span><span style="color:#98C379;"> myName</span></span>
<span class="line"><span style="color:#E06C75;">myName</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;JIM&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>运行脚本会提示错误</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>test.sh: line 11: myName: readonly variable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="删除变量" tabindex="-1">删除变量 <a class="header-anchor" href="#删除变量" aria-label="Permalink to &quot;删除变量&quot;">​</a></h3><p>使用 unset 命令可以删除变量</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">myName</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;abc&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;myName \${</span><span style="color:#E06C75;">myName</span><span style="color:#98C379;">} .&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;删除变量&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">unset</span><span style="color:#98C379;"> myName</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;myName \${</span><span style="color:#E06C75;">myName</span><span style="color:#98C379;">} .&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>运行脚本发现变量已经没有了</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>myName abc .</span></span>
<span class="line"><span>删除变量</span></span>
<span class="line"><span>myName  .</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="shell-字符串" tabindex="-1">Shell 字符串 <a class="header-anchor" href="#shell-字符串" aria-label="Permalink to &quot;Shell 字符串&quot;">​</a></h3><p>单引号</p><ul><li>单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的</li></ul><p>双引号</p><ul><li>双引号里可以有变量</li><li>双引号里可以出现转义字符</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">str</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;abc&#39;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#E06C75;"> $str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">str1</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;双引号</span><span style="color:#E06C75;">$str</span><span style="color:#98C379;"> \\n&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#E06C75;"> $str1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="获取字符串长度" tabindex="-1">获取字符串长度 <a class="header-anchor" href="#获取字符串长度" aria-label="Permalink to &quot;获取字符串长度&quot;">​</a></h4><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">string</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;abcd&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#ABB2BF;"> \${#</span><span style="color:#E06C75;">string</span><span style="color:#ABB2BF;">}   </span><span style="color:#7F848E;font-style:italic;"># 输出 4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="shell-数组" tabindex="-1">Shell 数组 <a class="header-anchor" href="#shell-数组" aria-label="Permalink to &quot;Shell 数组&quot;">​</a></h3><h4 id="定义数组" tabindex="-1">定义数组 <a class="header-anchor" href="#定义数组" aria-label="Permalink to &quot;定义数组&quot;">​</a></h4><p>在 Shell 中，用括号来表示数组，数组元素用&quot;空格&quot;符号分割开。定义数组的一般形式为：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">arr</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#D19A66;"> 2</span><span style="color:#D19A66;"> 3</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="读取数组" tabindex="-1">读取数组 <a class="header-anchor" href="#读取数组" aria-label="Permalink to &quot;读取数组&quot;">​</a></h4><p>数组元素的下标由 0 开始编号，通过下标读取，@可以获取全部</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">arr</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#D19A66;"> 2</span><span style="color:#D19A66;"> 3</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;arr的第二位:\${</span><span style="color:#E06C75;">arr</span><span style="color:#98C379;">[1]}&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;arr:\${</span><span style="color:#E06C75;">arr</span><span style="color:#98C379;">[@]}&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>结果输出</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>arr的第二位:2</span></span>
<span class="line"><span>arr:1 2 3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="shell-传递参数" tabindex="-1">Shell 传递参数 <a class="header-anchor" href="#shell-传递参数" aria-label="Permalink to &quot;Shell 传递参数&quot;">​</a></h2><p>在执行 Shell 脚本时，向脚本传递参数，脚本内获取参数的格式为：$n。n 代表一个数字，1 为执行脚本的第一个参数，2 为执行脚本的第二个参数</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;Shell 传递参数实例！&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;执行的文件名：</span><span style="color:#E06C75;font-style:italic;">$0</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;第一个参数为：</span><span style="color:#E06C75;font-style:italic;">$1</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;第二个参数为：</span><span style="color:#E06C75;font-style:italic;">$2</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;第三个参数为：</span><span style="color:#E06C75;font-style:italic;">$3</span><span style="color:#98C379;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>执行脚本</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">sh</span><span style="color:#98C379;"> test.sh</span><span style="color:#98C379;"> a</span><span style="color:#98C379;"> b</span><span style="color:#98C379;"> c</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>输出结果</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>Shell 传递参数实例！</span></span>
<span class="line"><span>执行的文件名：test.sh</span></span>
<span class="line"><span>第一个参数为：a</span></span>
<span class="line"><span>第二个参数为：b</span></span>
<span class="line"><span>第三个参数为：c</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="特殊字符" tabindex="-1">特殊字符 <a class="header-anchor" href="#特殊字符" aria-label="Permalink to &quot;特殊字符&quot;">​</a></h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>$#</td><td>传递到脚本的参数个数</td></tr><tr><td>$*</td><td>以一个单字符串显示所有向脚本传递的参数</td></tr><tr><td>$@</td><td>与$*相同，但是使用时加引号，并在引号中返回每个参数</td></tr><tr><td>$?</td><td>显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误</td></tr></tbody></table><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;Shell 传递参数实例！&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;第一个参数为：</span><span style="color:#E06C75;font-style:italic;">$1</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;参数个数为：</span><span style="color:#E5C07B;">$#</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;传递的参数作为一个字符串显示：</span><span style="color:#E5C07B;">$*</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;退出状态 </span><span style="color:#E5C07B;">$?</span><span style="color:#98C379;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>输出结果</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>Shell 传递参数实例！</span></span>
<span class="line"><span>第一个参数为：a</span></span>
<span class="line"><span>参数个数为：3</span></span>
<span class="line"><span>传递的参数作为一个字符串显示：a b c</span></span>
<span class="line"><span>退出状态 0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="shell-基本运算符" tabindex="-1">Shell 基本运算符 <a class="header-anchor" href="#shell-基本运算符" aria-label="Permalink to &quot;Shell 基本运算符&quot;">​</a></h2><p>Shell 和其他编程语言一样，支持多种运算符，包括：</p><ul><li>算术运算符</li><li>关系运算符</li><li>布尔运算符</li><li>字符串运算符</li><li>文件测试运算符</li></ul><p>原生bash不支持简单的数学运算，但是可以通过其他命令来实现，例如 awk 和 expr，expr 最常用。</p><p>expr 是一款表达式计算工具，使用它能完成表达式的求值操作。</p><p>例如，两个数相加(注意使用的是反引号 \` 而不是单引号 &#39;)：</p><ul><li>表达式和运算符之间要有空格，例如 2+2 是不对的，必须写成 2 + 2</li><li>完整的表达式要被 <code></code> 包含</li></ul><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">val</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">expr</span><span style="color:#D19A66;"> 2</span><span style="color:#98C379;"> + </span><span style="color:#D19A66;">2</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;两数之和为 : </span><span style="color:#E06C75;">$val</span><span style="color:#98C379;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>输出结果</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>两数之和为 : 4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-label="Permalink to &quot;算术运算符&quot;">​</a></h3><p>下表列出了常用的算术运算符，假定变量 a 为 10，变量 b 为 20：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">举例</th></tr></thead><tbody><tr><td style="text-align:left;">+</td><td style="text-align:left;">加法</td><td style="text-align:left;"><code>expr $a + $b</code> 结果为 30。</td></tr><tr><td style="text-align:left;">-</td><td style="text-align:left;">减法</td><td style="text-align:left;"><code>expr $a - $b</code> 结果为 -10。</td></tr><tr><td style="text-align:left;">*</td><td style="text-align:left;">乘法</td><td style="text-align:left;"><code>expr $a \\* $b</code> 结果为 200。</td></tr><tr><td style="text-align:left;">/</td><td style="text-align:left;">除法</td><td style="text-align:left;"><code>expr $b / $a</code> 结果为 2。</td></tr><tr><td style="text-align:left;">%</td><td style="text-align:left;">取余</td><td style="text-align:left;"><code>expr $b % $a</code> 结果为 0。</td></tr><tr><td style="text-align:left;">=</td><td style="text-align:left;">赋值</td><td style="text-align:left;">a=$b 把变量 b 的值赋给 a。</td></tr><tr><td style="text-align:left;">==</td><td style="text-align:left;">相等。用于比较两个数字，相同则返回 true。</td><td style="text-align:left;">[ $a == $b ] 返回 false。</td></tr><tr><td style="text-align:left;">!=</td><td style="text-align:left;">不相等。用于比较两个数字，不相同则返回 true。</td><td style="text-align:left;">[ $a != $b ] 返回 true。</td></tr></tbody></table><h3 id="关系运算符" tabindex="-1">关系运算符 <a class="header-anchor" href="#关系运算符" aria-label="Permalink to &quot;关系运算符&quot;">​</a></h3><p>关系运算符只支持数字，不支持字符串，除非字符串的值是数字。</p><p>下表列出了常用的关系运算符，假定变量 a 为 10，变量 b 为 20：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">举例</th></tr></thead><tbody><tr><td style="text-align:left;">-eq</td><td style="text-align:left;">检测两个数是否相等，相等返回 true。</td><td style="text-align:left;">[ $a -eq $b ] 返回 false。</td></tr><tr><td style="text-align:left;">-ne</td><td style="text-align:left;">检测两个数是否不相等，不相等返回 true。</td><td style="text-align:left;">[ $a -ne $b ] 返回 true。</td></tr><tr><td style="text-align:left;">-gt</td><td style="text-align:left;">检测左边的数是否大于右边的，如果是，则返回 true。</td><td style="text-align:left;">[ $a -gt $b ] 返回 false。</td></tr><tr><td style="text-align:left;">-lt</td><td style="text-align:left;">检测左边的数是否小于右边的，如果是，则返回 true。</td><td style="text-align:left;">[ $a -lt $b ] 返回 true。</td></tr><tr><td style="text-align:left;">-ge</td><td style="text-align:left;">检测左边的数是否大于等于右边的，如果是，则返回 true。</td><td style="text-align:left;">[ $a -ge $b ] 返回 false。</td></tr><tr><td style="text-align:left;">-le</td><td style="text-align:left;">检测左边的数是否小于等于右边的，如果是，则返回 true。</td><td style="text-align:left;">[ $a -le $b ] 返回 true。</td></tr></tbody></table><h3 id="布尔运算符" tabindex="-1">布尔运算符 <a class="header-anchor" href="#布尔运算符" aria-label="Permalink to &quot;布尔运算符&quot;">​</a></h3><p>假定变量 a 为 10，变量 b 为 20</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">举例</th></tr></thead><tbody><tr><td style="text-align:left;">!</td><td style="text-align:left;">非运算，表达式为 true 则返回 false，否则返回 true。</td><td style="text-align:left;">[ ! false ] 返回 true。</td></tr><tr><td style="text-align:left;">-o</td><td style="text-align:left;">或运算，有一个表达式为 true 则返回 true。</td><td style="text-align:left;">[ $a -lt 20 -o $b -gt 100 ] 返回 true。</td></tr><tr><td style="text-align:left;">-a</td><td style="text-align:left;">与运算，两个表达式都为 true 才返回 true。</td><td style="text-align:left;">[ $a -lt 20 -a $b -gt 100 ] 返回 false。</td></tr></tbody></table><h3 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-label="Permalink to &quot;逻辑运算符&quot;">​</a></h3><p>假定变量 a 为 10，变量 b 为 20</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">举例</th></tr></thead><tbody><tr><td style="text-align:left;">&amp;&amp;</td><td style="text-align:left;">逻辑的 AND</td><td style="text-align:left;">[[ $a -lt 100 &amp;&amp; $b -gt 100 ]] 返回 false</td></tr><tr><td style="text-align:left;">||</td><td style="text-align:left;">逻辑的 OR</td><td style="text-align:left;">[[ $a -lt 100 || $b -gt 100 ]] 返回 true</td></tr></tbody></table><h3 id="字符串运算符" tabindex="-1">字符串运算符 <a class="header-anchor" href="#字符串运算符" aria-label="Permalink to &quot;字符串运算符&quot;">​</a></h3><p>假定变量 a 为 &quot;abc&quot;，变量 b 为 &quot;efg&quot;</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">说明</th><th style="text-align:left;">举例</th></tr></thead><tbody><tr><td style="text-align:left;">=</td><td style="text-align:left;">检测两个字符串是否相等，相等返回 true。</td><td style="text-align:left;">[ $a = $b ] 返回 false。</td></tr><tr><td style="text-align:left;">!=</td><td style="text-align:left;">检测两个字符串是否不相等，不相等返回 true。</td><td style="text-align:left;">[ $a != $b ] 返回 true。</td></tr><tr><td style="text-align:left;">-z</td><td style="text-align:left;">检测字符串长度是否为0，为0返回 true。</td><td style="text-align:left;">[ -z $a ] 返回 false。</td></tr><tr><td style="text-align:left;">-n</td><td style="text-align:left;">检测字符串长度是否不为 0，不为 0 返回 true。</td><td style="text-align:left;">[ -n &quot;$a&quot; ] 返回 true。</td></tr><tr><td style="text-align:left;">$</td><td style="text-align:left;">检测字符串是否不为空，不为空返回 true。</td><td style="text-align:left;">[ $a ] 返回 true。</td></tr></tbody></table><h3 id="文件测试运算符" tabindex="-1">文件测试运算符 <a class="header-anchor" href="#文件测试运算符" aria-label="Permalink to &quot;文件测试运算符&quot;">​</a></h3><p>文件测试运算符用于检测 Unix 文件的各种属性。</p><table><thead><tr><th style="text-align:left;">操作符</th><th style="text-align:left;">说明</th><th style="text-align:left;">举例</th></tr></thead><tbody><tr><td style="text-align:left;">-b file</td><td style="text-align:left;">检测文件是否是块设备文件，如果是，则返回 true。</td><td style="text-align:left;">[ -b $file ] 返回 false。</td></tr><tr><td style="text-align:left;">-c file</td><td style="text-align:left;">检测文件是否是字符设备文件，如果是，则返回 true。</td><td style="text-align:left;">[ -c $file ] 返回 false。</td></tr><tr><td style="text-align:left;">-d file</td><td style="text-align:left;">检测文件是否是目录，如果是，则返回 true。</td><td style="text-align:left;">[ -d $file ] 返回 false。</td></tr><tr><td style="text-align:left;">-f file</td><td style="text-align:left;">检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。</td><td style="text-align:left;">[ -f $file ] 返回 true。</td></tr><tr><td style="text-align:left;">-g file</td><td style="text-align:left;">检测文件是否设置了 SGID 位，如果是，则返回 true。</td><td style="text-align:left;">[ -g $file ] 返回 false。</td></tr><tr><td style="text-align:left;">-k file</td><td style="text-align:left;">检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。</td><td style="text-align:left;">[ -k $file ] 返回 false。</td></tr><tr><td style="text-align:left;">-p file</td><td style="text-align:left;">检测文件是否是有名管道，如果是，则返回 true。</td><td style="text-align:left;">[ -p $file ] 返回 false。</td></tr><tr><td style="text-align:left;">-u file</td><td style="text-align:left;">检测文件是否设置了 SUID 位，如果是，则返回 true。</td><td style="text-align:left;">[ -u $file ] 返回 false。</td></tr><tr><td style="text-align:left;">-r file</td><td style="text-align:left;">检测文件是否可读，如果是，则返回 true。</td><td style="text-align:left;">[ -r $file ] 返回 true。</td></tr><tr><td style="text-align:left;">-w file</td><td style="text-align:left;">检测文件是否可写，如果是，则返回 true。</td><td style="text-align:left;">[ -w $file ] 返回 true。</td></tr><tr><td style="text-align:left;">-x file</td><td style="text-align:left;">检测文件是否可执行，如果是，则返回 true。</td><td style="text-align:left;">[ -x $file ] 返回 true。</td></tr><tr><td style="text-align:left;">-s file</td><td style="text-align:left;">检测文件是否为空（文件大小是否大于0），不为空返回 true。</td><td style="text-align:left;">[ -s $file ] 返回 true。</td></tr><tr><td style="text-align:left;">-e file</td><td style="text-align:left;">检测文件（包括目录）是否存在，如果是，则返回 true。</td><td style="text-align:left;">[ -e $file ] 返回 true。</td></tr></tbody></table><h2 id="shell-echo命令" tabindex="-1">Shell echo命令 <a class="header-anchor" href="#shell-echo命令" aria-label="Permalink to &quot;Shell echo命令&quot;">​</a></h2><h3 id="显示普通字符串" tabindex="-1">显示普通字符串 <a class="header-anchor" href="#显示普通字符串" aria-label="Permalink to &quot;显示普通字符串&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;hello&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="显示转义字符" tabindex="-1">显示转义字符 <a class="header-anchor" href="#显示转义字符" aria-label="Permalink to &quot;显示转义字符&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">It is a test</span><span style="color:#56B6C2;">\\&quot;</span><span style="color:#98C379;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="显示变量" tabindex="-1">显示变量 <a class="header-anchor" href="#显示变量" aria-label="Permalink to &quot;显示变量&quot;">​</a></h3><p>read 命令从标准输入中读取一行,并把输入行的每个字段的值指定给 shell 变量</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"><span style="color:#56B6C2;">read</span><span style="color:#98C379;"> name</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#E06C75;"> $name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="显示换行" tabindex="-1">显示换行 <a class="header-anchor" href="#显示换行" aria-label="Permalink to &quot;显示换行&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;Hello /n&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;end&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="显示不换行" tabindex="-1">显示不换行 <a class="header-anchor" href="#显示不换行" aria-label="Permalink to &quot;显示不换行&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;Hello /c&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;world&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="显示结果定向至文件" tabindex="-1">显示结果定向至文件 <a class="header-anchor" href="#显示结果定向至文件" aria-label="Permalink to &quot;显示结果定向至文件&quot;">​</a></h3><p>echo &quot;It is a test&quot; &gt; myfile</p><h3 id="显示命令执行结果" tabindex="-1">显示命令执行结果 <a class="header-anchor" href="#显示命令执行结果" aria-label="Permalink to &quot;显示命令执行结果&quot;">​</a></h3><p>echo <code>date</code></p><h2 id="shell-printf-命令" tabindex="-1">Shell printf 命令 <a class="header-anchor" href="#shell-printf-命令" aria-label="Permalink to &quot;Shell printf 命令&quot;">​</a></h2><p>printf 使用引用文本或空格分隔的参数</p><p>%s %c %d %f 都是格式替代符，％s 输出一个字符串，％d 整型输出，％c 输出一个字符，％f 输出实数，以小数形式输出。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">printf</span><span style="color:#98C379;"> &quot;%-10s %-8s %-4s\\n&quot;</span><span style="color:#98C379;"> 姓名</span><span style="color:#98C379;"> 性别</span><span style="color:#98C379;"> 体重kg</span></span>
<span class="line"><span style="color:#56B6C2;">printf</span><span style="color:#98C379;"> &quot;%-10s %-8s %-4.2f\\n&quot;</span><span style="color:#98C379;"> 郭靖</span><span style="color:#98C379;"> 男</span><span style="color:#D19A66;"> 66.1234</span></span>
<span class="line"><span style="color:#56B6C2;">printf</span><span style="color:#98C379;"> &quot;%-10s %-8s %-4.2f\\n&quot;</span><span style="color:#98C379;"> 杨过</span><span style="color:#98C379;"> 男</span><span style="color:#D19A66;"> 48.6543</span></span>
<span class="line"><span style="color:#56B6C2;">printf</span><span style="color:#98C379;"> &quot;%-10s %-8s %-4.2f\\n&quot;</span><span style="color:#98C379;"> 郭芙</span><span style="color:#98C379;"> 女</span><span style="color:#D19A66;"> 47.9876</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>运行结果</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>姓名     性别   体重kg</span></span>
<span class="line"><span>郭靖     男      66.1234</span></span>
<span class="line"><span>杨过     男      48.6543</span></span>
<span class="line"><span>郭芙     女      47.9876</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="shell-流程控制" tabindex="-1">Shell 流程控制 <a class="header-anchor" href="#shell-流程控制" aria-label="Permalink to &quot;Shell 流程控制&quot;">​</a></h2><h3 id="if-else" tabindex="-1">if else <a class="header-anchor" href="#if-else" aria-label="Permalink to &quot;if else&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">10</span></span>
<span class="line"><span style="color:#E06C75;">b</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">20</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> [ </span><span style="color:#E06C75;">$a</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> $b</span><span style="color:#ABB2BF;"> ]</span></span>
<span class="line"><span style="color:#C678DD;">then</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;a 等于 b&quot;</span></span>
<span class="line"><span style="color:#C678DD;">elif</span><span style="color:#ABB2BF;"> [ </span><span style="color:#E06C75;">$a</span><span style="color:#56B6C2;"> -gt</span><span style="color:#E06C75;"> $b</span><span style="color:#ABB2BF;"> ]</span></span>
<span class="line"><span style="color:#C678DD;">then</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;a 大于 b&quot;</span></span>
<span class="line"><span style="color:#C678DD;">else</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;a 小于 b&quot;</span></span>
<span class="line"><span style="color:#C678DD;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 单行模式</span></span>
<span class="line"><span style="color:#C678DD;">if</span><span style="color:#ABB2BF;"> [ </span><span style="color:#E06C75;">$a</span><span style="color:#56B6C2;"> ==</span><span style="color:#E06C75;"> $b</span><span style="color:#ABB2BF;"> ]; </span><span style="color:#C678DD;">then</span><span style="color:#56B6C2;"> echo</span><span style="color:#98C379;"> &quot;a 等于 b&quot;</span><span style="color:#ABB2BF;">; </span><span style="color:#C678DD;">elif</span><span style="color:#ABB2BF;"> [ </span><span style="color:#E06C75;">$a</span><span style="color:#56B6C2;"> -gt</span><span style="color:#E06C75;"> $b</span><span style="color:#ABB2BF;"> ]; </span><span style="color:#C678DD;">then</span><span style="color:#56B6C2;"> echo</span><span style="color:#98C379;"> &quot;a 大于 b&quot;</span><span style="color:#ABB2BF;">; </span><span style="color:#C678DD;">else</span><span style="color:#56B6C2;"> echo</span><span style="color:#98C379;"> &quot;a 小于 b&quot;</span><span style="color:#ABB2BF;">; </span><span style="color:#C678DD;">fi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="for-循环" tabindex="-1">for 循环 <a class="header-anchor" href="#for-循环" aria-label="Permalink to &quot;for 循环&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 顺序输出当前列表中的数字</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;"> loop</span><span style="color:#C678DD;"> in</span><span style="color:#ABB2BF;"> 1 2 3 4 5</span></span>
<span class="line"><span style="color:#C678DD;">do</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;The value is: </span><span style="color:#E06C75;">$loop</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#C678DD;">done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 顺序输出字符串中的字符</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#E06C75;"> str</span><span style="color:#C678DD;"> in</span><span style="color:#ABB2BF;"> This is a string</span></span>
<span class="line"><span style="color:#C678DD;">do</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#E06C75;"> $str</span></span>
<span class="line"><span style="color:#C678DD;">done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="while-语句" tabindex="-1">while 语句 <a class="header-anchor" href="#while-语句" aria-label="Permalink to &quot;while 语句&quot;">​</a></h3><p>while 循环用于不断执行一系列命令</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#E06C75;">int</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">1</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># 当int小于等于5时，int加1，大于5时停止循环</span></span>
<span class="line"><span style="color:#ABB2BF;">while(( </span><span style="color:#E06C75;">$int</span><span style="color:#56B6C2;">&lt;=</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;"> ))</span></span>
<span class="line"><span style="color:#C678DD;">do</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#E06C75;"> $int</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  # Bash let 命令，它用于执行一个或多个表达式</span></span>
<span class="line"><span style="color:#56B6C2;">  let</span><span style="color:#98C379;"> &quot;int++&quot;</span></span>
<span class="line"><span style="color:#C678DD;">done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="until-循环" tabindex="-1">until 循环 <a class="header-anchor" href="#until-循环" aria-label="Permalink to &quot;until 循环&quot;">​</a></h3><p>until 循环执行一系列命令直至条件为 true 时停止。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">a</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">until</span><span style="color:#ABB2BF;"> [ </span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;"> $a</span><span style="color:#56B6C2;"> -lt</span><span style="color:#D19A66;"> 10</span><span style="color:#ABB2BF;"> ]</span></span>
<span class="line"><span style="color:#C678DD;">do</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#E06C75;"> $a</span></span>
<span class="line"><span style="color:#E06C75;">  a</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">\`</span><span style="color:#61AFEF;">expr</span><span style="color:#E06C75;"> $a</span><span style="color:#98C379;"> + </span><span style="color:#D19A66;">1</span><span style="color:#98C379;">\`</span></span>
<span class="line"><span style="color:#C678DD;">done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="case-esac" tabindex="-1">case ... esac <a class="header-anchor" href="#case-esac" aria-label="Permalink to &quot;case ... esac&quot;">​</a></h3><p>case ... esac 为多选择语句，与其他语言中的 switch ... case 语句类似，是一种多分支选择结构</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &#39;输入 1 到 4 之间的数字:&#39;</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &#39;你输入的数字为:&#39;</span></span>
<span class="line"><span style="color:#56B6C2;">read</span><span style="color:#98C379;"> aNum</span></span>
<span class="line"><span style="color:#C678DD;">case</span><span style="color:#E06C75;"> $aNum</span><span style="color:#C678DD;"> in</span></span>
<span class="line"><span style="color:#ABB2BF;">  1) echo </span><span style="color:#98C379;">&#39;你选择了 1&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ;;</span></span>
<span class="line"><span style="color:#ABB2BF;">  2) echo </span><span style="color:#98C379;">&#39;你选择了 2&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ;;</span></span>
<span class="line"><span style="color:#ABB2BF;">  3) echo </span><span style="color:#98C379;">&#39;你选择了 3&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ;;</span></span>
<span class="line"><span style="color:#ABB2BF;">  4) echo </span><span style="color:#98C379;">&#39;你选择了 4&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ;;</span></span>
<span class="line"><span style="color:#ABB2BF;">  *) echo </span><span style="color:#98C379;">&#39;你没有输入 1 到 4 之间的数字&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ;;</span></span>
<span class="line"><span style="color:#C678DD;">esac</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="跳出循环" tabindex="-1">跳出循环 <a class="header-anchor" href="#跳出循环" aria-label="Permalink to &quot;跳出循环&quot;">​</a></h3><h4 id="break-命令" tabindex="-1">break 命令 <a class="header-anchor" href="#break-命令" aria-label="Permalink to &quot;break 命令&quot;">​</a></h4><p>break 命令允许跳出所有循环（终止执行后面的所有循环）</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">while</span><span style="color:#56B6C2;"> :</span></span>
<span class="line"><span style="color:#C678DD;">do</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;输入 1 到 5 之间的数字:&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">  read</span><span style="color:#98C379;"> aNum</span></span>
<span class="line"><span style="color:#C678DD;">  case</span><span style="color:#E06C75;"> $aNum</span><span style="color:#C678DD;"> in</span></span>
<span class="line"><span style="color:#ABB2BF;">    1|2|3|4|5) echo </span><span style="color:#98C379;">&quot;你输入的数字为 </span><span style="color:#E06C75;">$aNum</span><span style="color:#98C379;">!&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">    ;;</span></span>
<span class="line"><span style="color:#ABB2BF;">    *) echo </span><span style="color:#98C379;">&quot;你输入的数字不是 1 到 5 之间的! 游戏结束&quot;</span></span>
<span class="line"><span style="color:#C678DD;">        break</span></span>
<span class="line"><span style="color:#ABB2BF;">    ;;</span></span>
<span class="line"><span style="color:#C678DD;">  esac</span></span>
<span class="line"><span style="color:#C678DD;">done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="continue" tabindex="-1">continue <a class="header-anchor" href="#continue" aria-label="Permalink to &quot;continue&quot;">​</a></h4><p>continue 命令与 break 命令类似，但是只跳出当前循环</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">while</span><span style="color:#56B6C2;"> :</span></span>
<span class="line"><span style="color:#C678DD;">do</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;输入 1 到 5 之间的数字:&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">  read</span><span style="color:#98C379;"> aNum</span></span>
<span class="line"><span style="color:#C678DD;">  case</span><span style="color:#E06C75;"> $aNum</span><span style="color:#C678DD;"> in</span></span>
<span class="line"><span style="color:#ABB2BF;">    1|2|3|4|5) echo </span><span style="color:#98C379;">&quot;你输入的数字为 </span><span style="color:#E06C75;">$aNum</span><span style="color:#98C379;">!&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">      echo</span><span style="color:#98C379;"> &quot;游戏结束&quot;</span></span>
<span class="line"><span style="color:#C678DD;">      break</span></span>
<span class="line"><span style="color:#ABB2BF;">    ;;</span></span>
<span class="line"><span style="color:#ABB2BF;">    *) echo </span><span style="color:#98C379;">&quot;你输入的数字不是 1 到 5 之间的!游戏继续&quot;</span></span>
<span class="line"><span style="color:#C678DD;">      continue</span></span>
<span class="line"><span style="color:#ABB2BF;">    ;;</span></span>
<span class="line"><span style="color:#C678DD;">  esac</span></span>
<span class="line"><span style="color:#C678DD;">done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="shell-函数" tabindex="-1">Shell 函数 <a class="header-anchor" href="#shell-函数" aria-label="Permalink to &quot;Shell 函数&quot;">​</a></h2><ul><li>可以带function fun() 定义，也可以直接fun() 定义,不带任何参数</li><li>参数返回，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。 return后跟数值n(0-255)</li></ul><h3 id="函数参数" tabindex="-1">函数参数 <a class="header-anchor" href="#函数参数" aria-label="Permalink to &quot;函数参数&quot;">​</a></h3><p>通过 $n 的形式来获取参数的值</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">demofun</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> This</span><span style="color:#98C379;"> is</span><span style="color:#98C379;"> a</span><span style="color:#98C379;"> demofun</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#D19A66;"> 3</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> 函数开始</span></span>
<span class="line"><span style="color:#61AFEF;">demofun</span></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;函数结束 </span><span style="color:#E5C07B;">$?</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">funWithParam</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;第一个参数为 </span><span style="color:#E06C75;font-style:italic;">$1</span><span style="color:#98C379;"> !&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;第二个参数为 </span><span style="color:#E06C75;font-style:italic;">$2</span><span style="color:#98C379;"> !&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;第十个参数为 </span><span style="color:#E06C75;">$10</span><span style="color:#98C379;"> !&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;第十个参数为 </span><span style="color:#E06C75;font-style:italic;">\${10}</span><span style="color:#98C379;"> !&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;第十一个参数为 </span><span style="color:#E06C75;font-style:italic;">\${11}</span><span style="color:#98C379;"> !&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;参数总数有 </span><span style="color:#E5C07B;">$#</span><span style="color:#98C379;"> 个!&quot;</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;作为一个字符串输出所有参数 </span><span style="color:#E5C07B;">$*</span><span style="color:#98C379;"> !&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">funWithParam</span><span style="color:#D19A66;"> 1</span><span style="color:#D19A66;"> 2</span><span style="color:#D19A66;"> 3</span><span style="color:#D19A66;"> 4</span><span style="color:#D19A66;"> 5</span><span style="color:#D19A66;"> 6</span><span style="color:#D19A66;"> 7</span><span style="color:#D19A66;"> 8</span><span style="color:#D19A66;"> 9</span><span style="color:#D19A66;"> 34</span><span style="color:#D19A66;"> 73</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="shell-输入-输出重定向" tabindex="-1">Shell 输入/输出重定向 <a class="header-anchor" href="#shell-输入-输出重定向" aria-label="Permalink to &quot;Shell 输入/输出重定向&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">command &gt; file</td><td style="text-align:left;">将输出重定向到 file。</td></tr><tr><td style="text-align:left;">command &lt; file</td><td style="text-align:left;">将输入重定向到 file。</td></tr><tr><td style="text-align:left;">command &gt;&gt; file</td><td style="text-align:left;">将输出以追加的方式重定向到 file。</td></tr><tr><td style="text-align:left;">n &gt; file</td><td style="text-align:left;">将文件描述符为 n 的文件重定向到 file。</td></tr><tr><td style="text-align:left;">n &gt;&gt; file</td><td style="text-align:left;">将文件描述符为 n 的文件以追加的方式重定向到 file。</td></tr><tr><td style="text-align:left;">n &gt;&amp; m</td><td style="text-align:left;">将输出文件 m 和 n 合并。</td></tr><tr><td style="text-align:left;">n &lt;&amp; m</td><td style="text-align:left;">将输入文件 m 和 n 合并。</td></tr><tr><td style="text-align:left;">&lt;&lt; tag</td><td style="text-align:left;">将开始标记 tag 和结束标记 tag 之间的内容作为输入。</td></tr></tbody></table><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;Hello World&quot;</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">demo.md</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>运行脚本会生成<code>demo.md</code>文件</p><p>使用命令<code>wc -l</code>获取文件行数</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">wc</span><span style="color:#D19A66;"> -l</span><span style="color:#ABB2BF;"> &lt; </span><span style="color:#98C379;">demo.md</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="dev-null-文件" tabindex="-1">/dev/null 文件 <a class="header-anchor" href="#dev-null-文件" aria-label="Permalink to &quot;/dev/null 文件&quot;">​</a></h3><p>如果希望执行某个命令，但又不希望在屏幕上显示输出结果</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">command</span><span style="color:#ABB2BF;"> &gt; </span><span style="color:#98C379;">/dev/null</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="shell-文件包含" tabindex="-1">Shell 文件包含 <a class="header-anchor" href="#shell-文件包含" aria-label="Permalink to &quot;Shell 文件包含&quot;">​</a></h2><p>. filename # 注意点号(.)和文件名中间有一空格</p><p>例子</p><p>test1.sh</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;abc&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>test2.sh</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"><span style="color:#56B6C2;">.</span><span style="color:#98C379;"> test1.sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;name </span><span style="color:#E06C75;">$name</span><span style="color:#98C379;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>运行test2.sh,输出name abc</p><h2 id="shell-选择" tabindex="-1">Shell 选择 <a class="header-anchor" href="#shell-选择" aria-label="Permalink to &quot;Shell 选择&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;what is your favorite color :&quot;</span></span>
<span class="line"><span style="color:#C678DD;">select</span><span style="color:#E06C75;"> color</span><span style="color:#C678DD;"> in</span><span style="color:#98C379;"> &quot;red&quot;</span><span style="color:#98C379;"> &quot;blue&quot;</span><span style="color:#98C379;"> &quot;green&quot;</span><span style="color:#98C379;"> &quot;white&quot;</span><span style="color:#98C379;"> &quot;black&quot;</span></span>
<span class="line"><span style="color:#C678DD;">do</span></span>
<span class="line"><span style="color:#56B6C2;">  echo</span><span style="color:#98C379;"> &quot;you choose is </span><span style="color:#E06C75;">$color</span><span style="color:#98C379;">&quot;</span></span>
<span class="line"><span style="color:#C678DD;">  break</span></span>
<span class="line"><span style="color:#C678DD;">done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>执行后，输入5，会打印black会退出</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>what is your favorite color :</span></span>
<span class="line"><span>1) red</span></span>
<span class="line"><span>2) blue</span></span>
<span class="line"><span>3) green</span></span>
<span class="line"><span>4) white</span></span>
<span class="line"><span>5) black</span></span>
<span class="line"><span>#? 5</span></span>
<span class="line"><span>you choose is black</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="shell-read" tabindex="-1">Shell read <a class="header-anchor" href="#shell-read" aria-label="Permalink to &quot;Shell read&quot;">​</a></h2><p>通过用户输入设置变量，可设置-s隐藏输入内容，-p来设置提示语</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">read</span><span style="color:#D19A66;"> -sp</span><span style="color:#98C379;"> &quot;请输入用户密码:&quot;</span><span style="color:#98C379;"> pwd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;">echo</span><span style="color:#98C379;"> &quot;\\n输入的密码是：</span><span style="color:#E06C75;">$pwd</span><span style="color:#98C379;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>假设输入1234，输入时不会展示文字，但内部变量已赋值</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>请输入用户密码:</span></span>
<span class="line"><span>输入的密码是：1234</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,161),t=[p];function o(r,c,i,d,b,u){return n(),a("div",null,t)}const m=s(e,[["render",o]]);export{h as __pageData,m as default};
