import{_ as p,r as t,o,c as e,b as n,a as c,f as l,e as s}from"./app.c90e916d.js";const u={},k=l(`<h1 id="es6\u5B9E\u7528\u6280\u672F\u70B9" tabindex="-1"><a class="header-anchor" href="#es6\u5B9E\u7528\u6280\u672F\u70B9" aria-hidden="true">#</a> ES6\u5B9E\u7528\u6280\u672F\u70B9</h1><h2 id="\u76EE\u5F55" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55" aria-hidden="true">#</a> \u76EE\u5F55</h2><ul><li>\u5757\u7EA7\u4F5C\u7528\u57DF</li><li>\u5B57\u7B26\u4E32</li><li>\u89E3\u6784</li><li>\u51FD\u6570</li><li>\u6570\u7EC4</li><li>\u5BF9\u8C61</li><li>Set</li><li>Map</li><li>Class</li><li>Module</li><li>\u5F02\u6B65\u7F16\u7A0B</li></ul><h2 id="_1\u3001\u5757\u7EA7\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u5757\u7EA7\u4F5C\u7528\u57DF" aria-hidden="true">#</a> 1\u3001\u5757\u7EA7\u4F5C\u7528\u57DF</h2><h3 id="\u53D8\u91CF\u7533\u660E-let\u53D6\u4EE3var" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u7533\u660E-let\u53D6\u4EE3var" aria-hidden="true">#</a> \u53D8\u91CF\u7533\u660E\uFF0Clet\u53D6\u4EE3var</h3><ul><li>\u53EA\u5728\u58F0\u660E\u6240\u5728\u7684\u5757\u7EA7\u4F5C\u7528\u57DF\u5185\u6709\u6548</li><li>\u4E0D\u4F1A\u53D1\u751F\u53D8\u91CF\u63D0\u5347\u2014\u5148\u5B9A\u4E49\u540E\u4F7F\u7528\uFF0Cor <em>ReferenceError</em>(\u5F15\u7528\u9519\u8BEF)</li><li>\u4E0D\u5141\u8BB8\u91CD\u590D\u58F0\u660E\u2014\u4F5C\u7528\u57DF\u5185\u53EA\u80FD\u5B9A\u4E491\u6B21\uFF0Cor <em>SyntaxError</em>(\u8BED\u6CD5\u9519\u8BEF)</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">test</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a1 <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span>
<span class="token comment">// Uncaught ReferenceError: a1 is not defined</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a2<span class="token punctuation">)</span>
<span class="token keyword">let</span> a2 <span class="token operator">=</span> <span class="token number">1</span>
<span class="token comment">// Uncaught ReferenceError: a2 is not defined</span>

<span class="token keyword">let</span> a3 <span class="token operator">=</span> <span class="token number">1</span>
<span class="token comment">// ...</span>
<span class="token keyword">let</span> a3 <span class="token operator">=</span> <span class="token number">2</span>
<span class="token comment">// Uncaught SyntaxError: Identifier &#39;a3&#39; has already been declared</span>
</code></pre></div><h3 id="\u4F7F\u7528const\u5B9A\u4E49\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528const\u5B9A\u4E49\u5E38\u91CF" aria-hidden="true">#</a> \u4F7F\u7528const\u5B9A\u4E49\u5E38\u91CF</h3><ul><li><p><code>const</code>\u58F0\u660E\u4E00\u4E2A\u53EA\u8BFB\u7684\u5E38\u91CF\uFF0C\u4E14\u4E0D\u80FD\u4FEE\u6539\u503C\uFF0C\u5426\u5219<em>TypeError</em>(\u7C7B\u578B\u9519\u8BEF)</p></li><li><p><code>const</code>\u672C\u8D28\u2014\u2014\u53D8\u91CF\u6307\u5411\u7684\u5185\u5B58\u5730\u5740\u6240\u4FDD\u5B58\u7684\u6570\u636E\u4E0D\u5F97\u6539\u52A8</p><p>\u7B80\u5355\u7C7B\u578B\u7684\u6570\u636E\uFF08\u6570\u503C\u3001\u5B57\u7B26\u4E32\u3001\u5E03\u5C14\u503C\uFF09\uFF0C\u53D8\u91CF\u7684\u503C\u5C31\u4FDD\u5B58\u5728\u53D8\u91CF\u6307\u5411\u7684\u5185\u5B58\u5730\u5740\uFF0C\u56E0\u6B64\u7B49\u540C\u4E8E\u5E38\u91CF</p><p>\u590D\u5408\u7C7B\u578B\u7684\u6570\u636E\uFF08\u4E3B\u8981\u662F\u5BF9\u8C61\u548C\u6570\u7EC4\uFF09\uFF0C\u53D8\u91CF\u6307\u5411\u7684\u5185\u5B58\u5730\u5740\u4E0D\u53EF\u53D8\uFF0C\u4F46\u5B83\u6307\u5411\u7684\u6570\u636E\u7ED3\u6784\u4E0D\u53EF\u63A7</p></li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> b1 <span class="token operator">=</span> <span class="token number">1</span>
b1 <span class="token operator">=</span> <span class="token number">2</span>
<span class="token comment">// Uncaught TypeError: Assignment to constant variable.</span>

<span class="token keyword">const</span> b2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
b2<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token string">&#39;hehe&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span>
<span class="token comment">// { x: &#39;hehe&#39; }</span>

<span class="token keyword">const</span> b3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
b3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b3<span class="token punctuation">)</span>
<span class="token comment">// [1]</span>
</code></pre></div><h2 id="_2\u3001\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 2\u3001\u5B57\u7B26\u4E32</h2><h3 id="\u6A21\u677F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u6A21\u677F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u6A21\u677F\u5B57\u7B26\u4E32</h3><blockquote><p>\u589E\u5F3A\u7248\u7684\u5B57\u7B26\u4E32\uFF0C\u7528\u53CD\u5F15\u53F7\uFF08\`\uFF09\u6807\u8BC6</p></blockquote><ul><li>\u666E\u901A\u5B57\u7B26\u4E32</li><li>\u591A\u884C\u5B57\u7B26\u4E32\u2014\u2014\u6240\u6709\u7684\u7A7A\u683C\u548C\u7F29\u8FDB\u90FD\u4F1A\u88AB\u4FDD\u7559</li><li>\u5B57\u7B26\u4E32\u4E2D\u5D4C\u5165\u53D8\u91CF</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6211\u5C31\u662F\u4E00\u4E32\u5B57</span><span class="token template-punctuation string">\`</span></span>

<span class="token keyword">const</span> str2 <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6211\u662F\u7B2C\u4E00\u884C
 \u6211\u662F\u7B2C\u4E8C\u884C</span><span class="token template-punctuation string">\`</span></span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span>
<span class="token comment">// \u6211\u662F\u7B2C\u4E00\u884C</span>
<span class="token comment">// \u6211\u662F\u7B2C\u4E8C\u884C</span>

<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;utry&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token comment">// Hello utry</span>
</code></pre></div><h3 id="\u65B0\u589Eapi" tabindex="-1"><a class="header-anchor" href="#\u65B0\u589Eapi" aria-hidden="true">#</a> \u65B0\u589EAPI</h3><ul><li><strong>includes()</strong>\uFF1A\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u662F\u5426\u627E\u5230\u4E86\u53C2\u6570\u5B57\u7B26\u4E32</li><li><strong>repeat()</strong>\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u5B57\u7B26\u4E32\uFF0C\u8868\u793A\u5C06\u539F\u5B57\u7B26\u4E32\u91CD\u590D<code>n</code>\u6B21</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// true</span>

<span class="token keyword">const</span> words <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span>
<span class="token comment">// hello worldhello worldhello world</span>
</code></pre></div><h2 id="_3\u3001\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u89E3\u6784" aria-hidden="true">#</a> 3\u3001\u89E3\u6784</h2><h3 id="\u6570\u7EC4\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u89E3\u6784" aria-hidden="true">#</a> \u6570\u7EC4\u89E3\u6784</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token comment">// 1 2 3</span>
</code></pre></div><h3 id="\u5BF9\u8C61\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u89E3\u6784" aria-hidden="true">#</a> \u5BF9\u8C61\u89E3\u6784</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> age <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span>
<span class="token comment">// a 10</span>

<span class="token comment">// \u5982\u679C\u53D8\u91CF\u540D\u4E0E\u5C5E\u6027\u540D\u4E0D\u4E00\u81F4</span>
<span class="token keyword">let</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> key<span class="token punctuation">,</span> year <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">,</span> tel <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> year<span class="token punctuation">,</span> tel<span class="token punctuation">)</span>
<span class="token comment">// a 1000 undefined</span>
</code></pre></div><h3 id="\u51FD\u6570\u53C2\u6570\u7684\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u53C2\u6570\u7684\u89E3\u6784" aria-hidden="true">#</a> \u51FD\u6570\u53C2\u6570\u7684\u89E3\u6784</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// 3</span>
</code></pre></div><h3 id="\u904D\u5386-map" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386-map" aria-hidden="true">#</a> \u904D\u5386 Map</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;first&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;second&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// first is hello</span>
<span class="token comment">// second is world</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">of</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">map has </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// map has first</span>
<span class="token comment">// map has second</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">map has value </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// map has value hello</span>
<span class="token comment">// map has value world</span>
</code></pre></div><h3 id="\u6A21\u5757\u5BFC\u5165" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757\u5BFC\u5165" aria-hidden="true">#</a> \u6A21\u5757\u5BFC\u5165</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// test.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token number">2</span>

<span class="token comment">// index.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> b <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
<span class="token comment">// 1 2</span>
</code></pre></div><h2 id="_4\u3001\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u51FD\u6570" aria-hidden="true">#</a> 4\u3001\u51FD\u6570</h2><h3 id="\u51FD\u6570\u53C2\u6570\u9ED8\u8BA4\u503C" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u53C2\u6570\u9ED8\u8BA4\u503C" aria-hidden="true">#</a> \u51FD\u6570\u53C2\u6570\u9ED8\u8BA4\u503C</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">// 2</span>
</code></pre></div><h3 id="rest-\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#rest-\u53C2\u6570" aria-hidden="true">#</a> rest \u53C2\u6570</h3><blockquote><p>\u5F62\u5F0F\u4E3A<code>...\u53D8\u91CF\u540D</code></p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> val <span class="token keyword">of</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">+=</span> val
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> sum
<span class="token punctuation">}</span>
<span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment">// 15</span>
</code></pre></div><h3 id="\u7BAD\u5934\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a> \u7BAD\u5934\u51FD\u6570</h3><blockquote><p>\u4F7F\u7528\u201C\u7BAD\u5934\u201D\uFF08<code>=&gt;</code>\uFF09\u5B9A\u4E49\u51FD\u6570</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span> num2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> num1 <span class="token operator">+</span> num2

<span class="token comment">// \u4E0E\u89E3\u6784\u4E00\u8D77</span>
<span class="token keyword">const</span> <span class="token function-variable function">fullName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> first<span class="token punctuation">,</span> last <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>first<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>last<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&#39;han&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&#39;meimei&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// han meimei</span>

<span class="token comment">// \u4E0Erest\u4E00\u8D77</span>
<span class="token keyword">const</span> <span class="token function-variable function">numbers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>nums</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> nums
<span class="token function">numbers</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment">// (5) [1, 2, 3, 4, 5]</span>
</code></pre></div><h2 id="_5\u3001\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u6570\u7EC4" aria-hidden="true">#</a> 5\u3001\u6570\u7EC4</h2><h3 id="\u6269\u5C55\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u6269\u5C55\u8FD0\u7B97\u7B26</h3><p>\u597D\u6BD4 rest \u53C2\u6570\u7684\u9006\u8FD0\u7B97</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// 1 2 3</span>

<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span> num2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> num1 <span class="token operator">+</span> num2

<span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">]</span>
<span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">...</span>numbers<span class="token punctuation">)</span>
<span class="token comment">// 42</span>
</code></pre></div><p>\u4F7F\u7528\u6269\u5C55\u8FD0\u7B97\u7B26\uFF08...\uFF09\u62F7\u8D1D\u6570\u7EC4</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> itemsCopy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>items<span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>itemsCopy<span class="token punctuation">)</span>
<span class="token comment">// [1, 2, 3]</span>
</code></pre></div><h3 id="array-from" tabindex="-1"><a class="header-anchor" href="#array-from" aria-hidden="true">#</a> Array.from</h3><p>\u7528\u4E8E\u5C06\u4E24\u7C7B\u5BF9\u8C61\u8F6C\u4E3A\u771F\u6B63\u7684\u6570\u7EC4\uFF1A\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\uFF08array-like object\uFF09\u548C\u53EF\u904D\u5386\uFF08iterable\uFF09\u7684\u5BF9\u8C61</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> arrayLike <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;0&#39;</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;1&#39;</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;2&#39;</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">)</span>
<span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;.foo&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> nodes <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span>
</code></pre></div><h2 id="_6\u3001\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u5BF9\u8C61" aria-hidden="true">#</a> 6\u3001\u5BF9\u8C61</h2><h3 id="object-assign" tabindex="-1"><a class="header-anchor" href="#object-assign" aria-hidden="true">#</a> Object.assign</h3><ul><li>\u7528\u4E8E\u5BF9\u8C61\u7684\u5408\u5E76\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u4E0E\u6E90\u5BF9\u8C61\u6709\u540C\u540D\u5C5E\u6027\uFF0C\u6216\u591A\u4E2A\u6E90\u5BF9\u8C61\u6709\u540C\u540D\u5C5E\u6027\uFF0C\u5219\u540E\u9762\u7684\u5C5E\u6027\u4F1A\u8986\u76D6\u524D\u9762\u7684\u5C5E\u6027</li></ul><blockquote><p>\u6D45\u62F7\u8D1D</p></blockquote><p>\u7B80\u5355\u5BF9\u8C61\u4E0D\u53D7\u5F71\u54CD</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span>
obj1<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">2</span>
obj2<span class="token punctuation">.</span>a
<span class="token comment">// 1</span>
</code></pre></div><p>\u5D4C\u5957\u5BF9\u8C61\uFF0C\u6DF7\u4E71\u4E86</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span>

obj1<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span>
obj2<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b
<span class="token comment">// 2</span>

obj2<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">10</span>
obj1<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b
<span class="token comment">// 10</span>
</code></pre></div><p>\u89E3\u51B3\u5751\u70B9\u2014\u2014\u5D4C\u5957\u5BF9\u8C61\u7684\u6DF1\u62F7\u8D1D</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> obj2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span>

obj1<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span>
obj2<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b
<span class="token comment">// 1</span>

obj2<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">100</span>
obj1<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b
<span class="token comment">// 2</span>
</code></pre></div><h4 id="\u7528\u9014" tabindex="-1"><a class="header-anchor" href="#\u7528\u9014" aria-hidden="true">#</a> \u7528\u9014</h4><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u6DFB\u52A0\u5C5E\u6027</span>
<span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>x<span class="token punctuation">,</span> y<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u514B\u9686</span>
<span class="token keyword">const</span> <span class="token function-variable function">clone</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">origin</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> origin<span class="token punctuation">)</span>

<span class="token comment">// \u5408\u5E76\u5BF9\u8C61</span>
<span class="token keyword">const</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>sources</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span>sources<span class="token punctuation">)</span>
</code></pre></div><h3 id="\u65B0\u589Eapi-1" tabindex="-1"><a class="header-anchor" href="#\u65B0\u589Eapi-1" aria-hidden="true">#</a> \u65B0\u589EAPI</h3><blockquote><p>\u4F9B<code>for...of</code>\u5FAA\u73AF\u4F7F\u7528</p></blockquote><ul><li><strong>Object.keys()</strong>\uFF1A\u5BF9\u8C61\u7684\u952E\u540D</li><li><strong>Object.values()</strong>\uFF1A\u5BF9\u8C61\u7684\u952E\u503C</li><li><strong>Object.entries()</strong>\uFF1A\u5BF9\u8C61\u7684\u952E\u503C\u5BF9\u6570\u7EC4</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token punctuation">{</span>keys<span class="token punctuation">,</span> values<span class="token punctuation">,</span> entries<span class="token punctuation">}</span> <span class="token operator">=</span> Object
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> <span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// &#39;a&#39;, &#39;b&#39;, &#39;c&#39;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> <span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1, 2, 3</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token function">entries</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// [&#39;a&#39;, 1], [&#39;b&#39;, 2], [&#39;c&#39;, 3]</span>
</code></pre></div><h2 id="_7\u3001set" tabindex="-1"><a class="header-anchor" href="#_7\u3001set" aria-hidden="true">#</a> 7\u3001Set</h2><blockquote><p>\u7C7B\u4F3C\u6570\u7EC4\uFF0C\u4F46\u6CA1\u6709\u91CD\u590D\u7684\u503C\uFF0C\u901A\u8FC7<code>add</code>\u65B9\u6CD5\u5411 Set \u7ED3\u6784\u52A0\u5165\u6210\u5458</p></blockquote><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h3><ul><li><strong>add(value)</strong>\uFF1A\u6DFB\u52A0\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE Set \u7ED3\u6784\u672C\u8EAB\u3002</li><li><strong>delete(value)</strong>\uFF1A\u5220\u9664\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u5220\u9664\u662F\u5426\u6210\u529F\u3002</li><li><strong>has(value)</strong>\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u8BE5\u503C\u662F\u5426\u4E3A<code>Set</code>\u7684\u6210\u5458\u3002</li><li><strong>clear()</strong>\uFF1A\u6E05\u9664\u6240\u6709\u6210\u5458\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\u3002</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// \u6CE8\u610F2\u88AB\u52A0\u5165\u4E86\u4E24\u6B21</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token comment">// 2</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>

s<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> \u6570\u7EC4\u53BB\u91CD</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u53BB\u9664\u6570\u7EC4\u7684\u91CD\u590D\u6210\u5458</span>
<span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [1, 2, 3, 4, 5, 6]</span>
</code></pre></div><h3 id="\u5176\u4ED6\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u5E94\u7528" aria-hidden="true">#</a> \u5176\u4ED6\u5E94\u7528</h3><blockquote><p>\u5E76\u96C6\uFF08Union\uFF09\u3001\u4EA4\u96C6\uFF08Intersect\uFF09\u548C\u5DEE\u96C6\uFF08Difference\uFF09</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// \u5E76\u96C6</span>
<span class="token keyword">let</span> union <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// Set {1, 2, 3, 4}</span>

<span class="token comment">// \u4EA4\u96C6</span>
<span class="token keyword">let</span> intersect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// set {2, 3}</span>

<span class="token comment">// \u5DEE\u96C6</span>
<span class="token keyword">let</span> difference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Set {1}</span>
</code></pre></div><h2 id="_8\u3001map" tabindex="-1"><a class="header-anchor" href="#_8\u3001map" aria-hidden="true">#</a> 8\u3001Map</h2><h3 id="api-1" tabindex="-1"><a class="header-anchor" href="#api-1" aria-hidden="true">#</a> API</h3><ul><li><strong>set(key, value)</strong>\uFF1A\u8BBE\u7F6E\u952E\u540D<code>key</code>\u5BF9\u5E94\u7684\u952E\u503C\u4E3A<code>value</code>\u5E76\u8FD4\u56DEMap</li><li><strong>get(key)</strong>\uFF1A\u8BFB\u53D6<code>key</code>\u5BF9\u5E94\u7684\u952E\u503C\uFF0C\u627E\u4E0D\u5230\u8FD4\u56DE<code>undefined</code></li><li><strong>has(key)</strong>\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u67D0\u4E2A\u952E\u662F\u5426\u5728\u5F53\u524D Map \u5BF9\u8C61\u4E4B\u4E2D</li><li><strong>delete(key)</strong>\uFF1A\u5220\u9664\u67D0\u4E2A\u952E\uFF0C\u8FD4\u56DE<code>true</code>\u3002\u5931\u8D25\u8FD4\u56DE<code>false</code></li><li><strong>clear()</strong>\uFF1A\u6E05\u9664\u6240\u6709\u6210\u5458\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> o <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">p</span><span class="token operator">:</span> <span class="token string">&#39;Hello World&#39;</span> <span class="token punctuation">}</span>

<span class="token comment">// \u201C\u952E\u201D\u7684\u8303\u56F4\u4E0D\u9650\u4E8E\u5B57\u7B26\u4E32\uFF0C\u5404\u79CD\u7C7B\u578B\u7684\u503C\uFF08\u5305\u62EC\u5BF9\u8C61\uFF09\u90FD\u53EF\u4EE5\u5F53\u4F5C\u952E</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
<span class="token comment">// content</span>
m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// undefined</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
<span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
<span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
<span class="token comment">// false</span>
</code></pre></div><h2 id="_9\u3001class" tabindex="-1"><a class="header-anchor" href="#_9\u3001class" aria-hidden="true">#</a> 9\u3001Class</h2><blockquote><p>ES6 \u7684<code>class</code>\u53EF\u4EE5\u770B\u4F5C\u53EA\u662F\u4E00\u4E2A\u8BED\u6CD5\u7CD6</p></blockquote><h3 id="\u53D6\u4EE3-prototype" tabindex="-1"><a class="header-anchor" href="#\u53D6\u4EE3-prototype" aria-hidden="true">#</a> \u53D6\u4EE3 prototype</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// old</span>
<span class="token keyword">function</span> <span class="token function">Dog</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;dog&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
<span class="token punctuation">}</span>
<span class="token class-name">Dog</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6211\u53EB</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> ww <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token string">&#39;\u65FA\u8D22&#39;</span><span class="token punctuation">)</span>
ww<span class="token punctuation">.</span>name
<span class="token comment">// \u65FA\u8D22</span>
ww<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6211\u53EB\u65FA\u8D22</span>

<span class="token comment">// new</span>
<span class="token keyword">class</span> <span class="token class-name">NewDog</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;dog&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token punctuation">}</span>
  <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6211\u53EB</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> www <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NewDog</span><span class="token punctuation">(</span><span class="token string">&#39;\u5927\u9EC4&#39;</span><span class="token punctuation">)</span>
www<span class="token punctuation">.</span>name
<span class="token comment">// \u5927\u9EC4</span>
www<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6211\u53EB\u5927\u9EC4</span>
</code></pre></div><h3 id="\u4F7F\u7528extends\u5B9E\u73B0\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528extends\u5B9E\u73B0\u7EE7\u627F" aria-hidden="true">#</a> \u4F7F\u7528<code>extends</code>\u5B9E\u73B0\u7EE7\u627F</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token punctuation">}</span>
  <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6211\u53EB</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
  <span class="token punctuation">}</span>
  <span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> w <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C0F\u5F3A&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
w<span class="token punctuation">.</span>name
<span class="token comment">// \u5C0F\u5F3A</span>
w<span class="token punctuation">.</span>age
<span class="token comment">// 10</span>
w<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u6211\u53EB\u5C0F\u5F3A</span>
w<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// dog</span>
</code></pre></div><h3 id="\u9759\u6001\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a> \u9759\u6001\u65B9\u6CD5</h3><blockquote><p>\u52A0\u4E0Astatic\u5173\u952E\u5B57\uFF0C\u8868\u793A\u4E0D\u4F1A\u88AB\u5B9E\u4F8B\u7EE7\u627F</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

Foo<span class="token punctuation">.</span><span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;hello&#39;</span>

<span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
foo<span class="token punctuation">.</span><span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// TypeError: foo.classMethod is not a function</span>

</code></pre></div><p>\u7236\u7C7B\u7684\u9759\u6001\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u88AB\u5B50\u7C7B\u7EE7\u627F</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Father</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Child</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
Child<span class="token punctuation">.</span><span class="token function">classMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;hello&#39;</span>
</code></pre></div><h2 id="_10\u3001module" tabindex="-1"><a class="header-anchor" href="#_10\u3001module" aria-hidden="true">#</a> 10\u3001Module</h2><h3 id="export" tabindex="-1"><a class="header-anchor" href="#export" aria-hidden="true">#</a> export</h3><blockquote><p>\u5B9A\u4E49\u4E86\u6A21\u5757\u7684\u5BF9\u5916\u63A5\u53E3</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// test1.js</span>
<span class="token keyword">const</span> a1 <span class="token operator">=</span> <span class="token number">11</span>
<span class="token keyword">const</span> b1 <span class="token operator">=</span> <span class="token number">12</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> a1<span class="token punctuation">,</span> b1 <span class="token punctuation">}</span>

<span class="token comment">// test2.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> a2 <span class="token operator">=</span> <span class="token number">21</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> b2 <span class="token operator">=</span> <span class="token number">22</span>

<span class="token comment">// test3.js</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a3</span><span class="token operator">:</span> <span class="token number">31</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b3</span><span class="token operator">:</span> <span class="token number">32</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="import" tabindex="-1"><a class="header-anchor" href="#import" aria-hidden="true">#</a> import</h3><blockquote><p>\u52A0\u8F7D\u6A21\u5757</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> a1<span class="token punctuation">,</span> b1 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test1.mjs&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> a2<span class="token punctuation">,</span> b2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test2.mjs&#39;</span>
<span class="token keyword">import</span> res <span class="token keyword">from</span> <span class="token string">&#39;./test3.mjs&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> b1<span class="token punctuation">)</span>
<span class="token comment">// 11 12</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a2<span class="token punctuation">,</span> b2<span class="token punctuation">)</span>
<span class="token comment">// 21 22</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> a3<span class="token punctuation">,</span> b3 <span class="token punctuation">}</span> <span class="token operator">=</span> res
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a3<span class="token punctuation">,</span> b3<span class="token punctuation">)</span>
<span class="token comment">// 31 32</span>
</code></pre></div><h3 id="\u5728node\u73AF\u5883\u4F7F\u7528module" tabindex="-1"><a class="header-anchor" href="#\u5728node\u73AF\u5883\u4F7F\u7528module" aria-hidden="true">#</a> \u5728Node\u73AF\u5883\u4F7F\u7528Module</h3><p>Node \u8981\u6C42 ES6 \u6A21\u5757\u91C7\u7528<code>.mjs</code>\u540E\u7F00\u6587\u4EF6\u540D</p><p>\u76EE\u524D\uFF0C\u8FD9\u9879\u529F\u80FD\u8FD8\u5728\u8BD5\u9A8C\u9636\u6BB5\u3002\u5B89\u88C5 Node v8.5.0 \u6216\u4EE5\u4E0A\u7248\u672C\uFF0C\u8981\u7528--experimental-modules\u53C2\u6570\u624D\u80FD\u6253\u5F00\u8BE5\u529F\u80FD\u3002</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">node</span> --experimental-modules index.mjs
</code></pre></div><h2 id="_11\u3001\u5F02\u6B65\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#_11\u3001\u5F02\u6B65\u7F16\u7A0B" aria-hidden="true">#</a> 11\u3001\u5F02\u6B65\u7F16\u7A0B</h2><h3 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> promise</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token comment">/* \u5F02\u6B65\u64CD\u4F5C\u6210\u529F */</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// then\u7B2C\u4E8C\u4E2A\u53C2\u6570\u63A5\u6536\u9519\u8BEF\u7684\u5904\u7406</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// success</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// failure</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5EFA\u8BAE\u603B\u662F\u4F7F\u7528catch\u65B9\u6CD5</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// success</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// error</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// finally\u65B9\u6CD5\u7528\u4E8E\u6307\u5B9A\u4E0D\u7BA1 Promise \u5BF9\u8C61\u6700\u540E\u72B6\u6001\u5982\u4F55\uFF0C\u90FD\u4F1A\u6267\u884C\u7684\u64CD\u4F5C\u3002ES2018 \u5F15\u5165</span>
promise
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="api-2" tabindex="-1"><a class="header-anchor" href="#api-2" aria-hidden="true">#</a> API</h3><ul><li><strong>Promise.all</strong>\uFF1A\u5168\u90E8\u8FD4\u56DE\u6210\u529F\u624D<code>resolve</code></li><li><strong>Promise.race</strong>\uFF1A\u6BD4\u6BD4\u8C01\u8DD1\u7684\u5FEB</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> promise1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> promise3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
  <span class="token comment">// Both resolve, but promise2 is faster</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// two</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>promise1<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> promise3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token comment">// promise3 is faster</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// err three</span>

</code></pre></div><blockquote><p><em>Axios</em>\u662F\u4E00\u4E2A\u57FA\u4E8E<em>promise</em>\u7684HTTP\u5E93</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u4E00\u4E2A\u4F7F\u7528axios\u83B7\u53D6\u63A5\u53E3\u6570\u636E\u7684\u4F8B\u5B50</span>
<span class="token function">getData</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$apis<span class="token punctuation">.</span>iceandfire<span class="token punctuation">.</span>books<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;\u4FE1\u606F\u83B7\u53D6\u6210\u529F&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>books <span class="token operator">=</span> res
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;\u4FE1\u606F\u83B7\u53D6\u5931\u8D25&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;\u4FE1\u606F\u83B7\u53D6\u5931\u8D25&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="async-await" tabindex="-1"><a class="header-anchor" href="#async-await" aria-hidden="true">#</a> async/await</h3><blockquote><p>ES2017 \u6807\u51C6\u5F15\u5165\u4E86 async \u51FD\u6570</p></blockquote><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// \u53EF\u4EE5\u7528\u4E8E\u4E8C\u6B21\u5C01\u88C5axios\uFF0C\u4F7F\u7528\u573A\u666F\u66F4\u7B80\u5355</span>
<span class="token keyword">async</span> <span class="token function">get</span> <span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;\u4FE1\u606F\u83B7\u53D6\u6210\u529F&#39;</span><span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;\u4FE1\u606F\u83B7\u53D6\u5931\u8D25&#39;</span><span class="token punctuation">)</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;\u4FE1\u606F\u83B7\u53D6\u5931\u8D25&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token function">getData</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>books <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$apis<span class="token punctuation">.</span>iceandfire<span class="token punctuation">.</span>books<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u76F8\u5173\u63A8\u8350" tabindex="-1"><a class="header-anchor" href="#\u76F8\u5173\u63A8\u8350" aria-hidden="true">#</a> \u76F8\u5173\u63A8\u8350</h2>`,111),i=s("\u5728\u7EBF\u6559\u7A0B-"),r={href:"http://es6.ruanyifeng.com",target:"_blank",rel:"noopener noreferrer"},d=s("ECMAScript 6 \u5165\u95E8");function m(g,h){const a=t("ExternalLinkIcon");return o(),e("div",null,[k,n("ul",null,[n("li",null,[i,n("a",r,[d,c(a)])])])])}var f=p(u,[["render",m],["__file","ES6\u5B9E\u7528\u6280\u672F\u70B9.html.vue"]]);export{f as default};
