import{d as c,o as i,c as B,p as u,a2 as t,G as r,w as y,B as d,a as m,t as b}from"./chunks/framework.BPuE4Feg.js";const A="/assets/v-model.DKIgEvez.png",F=["value"],C=c({__name:"my-component",props:{modelValue:{},modelModifiers:{}},emits:["update:modelValue"],setup(e,{emit:a}){const o=e,s=a;function p(n){let l=n.target.value;o.modelModifiers.capitalize&&(l=l.charAt(0).toUpperCase()+l.slice(1)),s("update:modelValue",l)}return(n,l)=>(i(),B("input",{type:"text",class:"input-css",value:n.modelValue,onInput:p},null,40,F))}}),g=JSON.parse('{"title":"Vue2组件升级","description":"","frontmatter":{},"headers":[],"relativePath":"study/Vue2组件升级.md","filePath":"study/Vue2组件升级.md"}'),v={name:"study/Vue2组件升级.md"},q=c({...v,setup(e){const a=u("");return(o,s)=>{const p=d("ClientOnly");return i(),B("div",null,[s[1]||(s[1]=t(`<h1 id="vue2组件升级" tabindex="-1">Vue2组件升级 <a class="header-anchor" href="#vue2组件升级" aria-label="Permalink to &quot;Vue2组件升级&quot;">​</a></h1><p>对 IE11 的支持：Vue 3 已经官方放弃对 IE11 的支持。如果仍然需要支持 IE11 或更低版本，那你仍需继续使用 Vue 2。</p><p><a href="https://v3.cn.vuejs.org/guide/migration/migration-build.html" target="_blank" rel="noreferrer">官方迁移方案</a></p><p>整理出几个常用的<code>非兼容</code>API</p><ul><li>v-model</li><li>v-if 与 v-for 的优先级对比</li><li>v-bind 合并行为</li></ul><h2 id="v-model" tabindex="-1">v-model <a class="header-anchor" href="#v-model" aria-label="Permalink to &quot;v-model&quot;">​</a></h2><ul><li>非兼容：用于自定义组件时，v-model prop 和事件默认名称已更改： <ul><li>prop：value -&gt; modelValue；</li><li>事件：input -&gt; update:modelValue；</li></ul></li></ul><h3 id="_2-x-语法" tabindex="-1">2.x 语法 <a class="header-anchor" href="#_2-x-语法" aria-label="Permalink to &quot;2.x 语法&quot;">​</a></h3><p>在 2.x 中，在组件上使用 v-model 相当于绑定 value prop 并触发 input 事件：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> v-model</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 是以下的简写: --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> :value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#D19A66;"> @input</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle = $event&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_3-x-语法" tabindex="-1">3.x 语法 <a class="header-anchor" href="#_3-x-语法" aria-label="Permalink to &quot;3.x 语法&quot;">​</a></h3><p>在 3.x 中，自定义组件上的 v-model 相当于传递了 modelValue prop 并接收抛出的 update:modelValue 事件：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> v-model</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 是以下的简写: --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> :modelValue</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#D19A66;"> @update:modelValue</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle = $event&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="v-model-参数" tabindex="-1">v-model 参数 <a class="header-anchor" href="#v-model-参数" aria-label="Permalink to &quot;v-model 参数&quot;">​</a></h3><p>若需要更改 model 的名称，现在我们可以为 v-model 传递一个参数，以作为组件内 model 选项的替代：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> v-model:title</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 是以下的简写: --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> :title</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#D19A66;"> @update:title</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle = $event&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+A+'" alt="v-model"></p><h3 id="v-model-修饰符" tabindex="-1">v-model 修饰符 <a class="header-anchor" href="#v-model-修饰符" aria-label="Permalink to &quot;v-model 修饰符&quot;">​</a></h3><p>除了像 .trim 这样的 2.x 硬编码的 v-model 修饰符外，现在 3.x 还支持自定义修饰符：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> v-model.capitalize</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>处理 v-model 修饰符</p><p>添加到组件 v-model 的修饰符将通过 modelModifiers prop 提供给组件。在下面的示例中，我们创建了一个组件，其中包含默认为空对象的 modelModifiers prop。</p><p>请注意，当组件的 created 生命周期钩子触发时，modelModifiers prop 会包含 capitalize，且其值为 true——因为 capitalize 被设置在了写为 v-model.capitalize=&quot;myText&quot; 的 v-model 绑定上。</p><h3 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;Demo&quot;">​</a></h3><p>创建一个示例自定义修饰符 capitalize，它将 v-model 绑定提供的字符串的第一个字母大写。</p>',25)),r(p,null,{default:y(()=>[r(C,{modelValue:a.value,"onUpdate:modelValue":s[0]||(s[0]=n=>a.value=n),modelModifiers:{capitalize:!0}},null,8,["modelValue"]),m(" "+b(a.value),1)]),_:1}),s[2]||(s[2]=t(`<details class="details custom-block"><summary>myComponent.vue</summary><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;"> type</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;"> class</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;input-css&quot;</span><span style="color:#D19A66;"> :value</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;modelValue&quot;</span><span style="color:#D19A66;"> @input</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;emitValue&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> setup</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;ts&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> props</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> defineProps</span><span style="color:#ABB2BF;">&lt;{</span></span>
<span class="line"><span style="color:#E06C75;">  modelValue</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  modelModifiers</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span></span>
<span class="line"><span style="color:#ABB2BF;">}&gt;()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> emit</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> defineEmits</span><span style="color:#ABB2BF;">([</span><span style="color:#98C379;">&#39;update:modelValue&#39;</span><span style="color:#ABB2BF;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> emitValue</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> value</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> e</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">target</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">modelModifiers</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">capitalize</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    value</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">charAt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">toUpperCase</span><span style="color:#ABB2BF;">() </span><span style="color:#56B6C2;">+</span><span style="color:#E5C07B;"> value</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">slice</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#61AFEF;">  emit</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;update:modelValue&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#D19A66;">.input-css</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  padding: </span><span style="color:#D19A66;">5</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  border-radius: </span><span style="color:#D19A66;">4</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  border: </span><span style="color:#D19A66;">1</span><span style="color:#E06C75;">px</span><span style="color:#D19A66;"> solid</span><span style="color:#D19A66;"> #ccc</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div></details><details class="details custom-block"><summary>demo.vue</summary><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">myComponent</span><span style="color:#D19A66;"> v-model.capitalize</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;myText&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  {{myText}}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;"> setup</span><span style="color:#D19A66;"> lang</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;ts&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ref</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> myText</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> ref</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;Abc&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></details><h3 id="迁移策略" tabindex="-1">迁移策略 <a class="header-anchor" href="#迁移策略" aria-label="Permalink to &quot;迁移策略&quot;">​</a></h3><ul><li>检查你的代码库中所有使用 .sync 的部分并将其替换为 v-model：</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> :title.sync</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 替换为 --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> v-model:title</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>对于所有不带参数的 v-model，请确保分别将 prop 和 event 命名更改为 modelValue 和 update:modelValue</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">ChildComponent</span><span style="color:#D19A66;"> v-model</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pageTitle&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// ChildComponent.vue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  props</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    modelValue</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">String</span><span style="color:#7F848E;font-style:italic;"> // 以前是\`value：String\`</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;">  emits</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;update:modelValue&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">  methods</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#61AFEF;">    changePageTitle</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">title</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">      this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">$emit</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;update:modelValue&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">title</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 以前是 \`this.$emit(&#39;input&#39;, title)\`</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="v-if-与-v-for-的优先级对比" tabindex="-1">v-if 与 v-for 的优先级对比 <a class="header-anchor" href="#v-if-与-v-for-的优先级对比" aria-label="Permalink to &quot;v-if 与 v-for 的优先级对比&quot;">​</a></h2><ul><li>非兼容：两者作用于同一个元素上时，v-if 会拥有比 v-for 更高的优先级</li></ul><h3 id="_2-x-语法-1" tabindex="-1">2.x 语法 <a class="header-anchor" href="#_2-x-语法-1" aria-label="Permalink to &quot;2.x 语法&quot;">​</a></h3><p>2.x 版本中在一个元素上同时使用 v-if 和 v-for 时，v-for 会优先作用。</p><h3 id="_3-x-语法-1" tabindex="-1">3.x 语法 <a class="header-anchor" href="#_3-x-语法-1" aria-label="Permalink to &quot;3.x 语法&quot;">​</a></h3><p>3.x 版本中 v-if 总是优先于 v-for 生效。</p><h2 id="v-bind-合并行为" tabindex="-1">v-bind 合并行为 <a class="header-anchor" href="#v-bind-合并行为" aria-label="Permalink to &quot;v-bind 合并行为&quot;">​</a></h2><ul><li>不兼容：v-bind 的绑定顺序会影响渲染结果。</li></ul><p>在一个元素上动态绑定 attribute 时，同时使用 v-bind=&quot;object&quot; 语法和独立 attribute 是常见的场景。然而，这就引出了关于合并的优先级的问题。</p><h3 id="_2-x-语法-2" tabindex="-1">2.x 语法 <a class="header-anchor" href="#_2-x-语法-2" aria-label="Permalink to &quot;2.x 语法&quot;">​</a></h3><p>在 2.x 中，如果一个元素同时定义了 v-bind=&quot;object&quot; 和一个相同的独立 attribute，那么这个独立 attribute 总是会覆盖 object 中的绑定。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 模板 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;red&quot;</span><span style="color:#D19A66;"> v-bind</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{ id: &#39;blue&#39; }&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 结果 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;red&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_3-x-语法-2" tabindex="-1">3.x 语法 <a class="header-anchor" href="#_3-x-语法-2" aria-label="Permalink to &quot;3.x 语法&quot;">​</a></h3><p>在 3.x 中，如果一个元素同时定义了 v-bind=&quot;object&quot; 和一个相同的独立 attribute，那么绑定的声明顺序将决定它们如何被合并。换句话说，相对于假设开发者总是希望独立 attribute 覆盖 object 中定义的内容，现在开发者能够对自己所希望的合并行为做更好的控制。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 模板 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;red&quot;</span><span style="color:#D19A66;"> v-bind</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{ id: &#39;blue&#39; }&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 结果 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;blue&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 模板 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> v-bind</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;{ id: &#39;blue&#39; }&quot;</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;red&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">&lt;!-- 结果 --&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;red&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,23))])}}});export{g as __pageData,q as default};
