import{_ as s,a as n,c as a,k as l}from"./app.8e593f3f.js";const y=JSON.parse('{"title":"Docker","description":"","frontmatter":{},"headers":[{"level":2,"title":"安装Docker Desktop","slug":"安装docker-desktop","link":"#安装docker-desktop","children":[{"level":3,"title":"下载安装包","slug":"下载安装包","link":"#下载安装包","children":[]},{"level":3,"title":"换源","slug":"换源","link":"#换源","children":[]}]},{"level":2,"title":"Docker基础使用","slug":"docker基础使用","link":"#docker基础使用","children":[{"level":3,"title":"官方示例","slug":"官方示例","link":"#官方示例","children":[]},{"level":3,"title":"对Docker操作","slug":"对docker操作","link":"#对docker操作","children":[]},{"level":3,"title":"对镜像操作","slug":"对镜像操作","link":"#对镜像操作","children":[]},{"level":3,"title":"对容器操作","slug":"对容器操作","link":"#对容器操作","children":[]},{"level":3,"title":"容器制作成镜像","slug":"容器制作成镜像","link":"#容器制作成镜像","children":[]}]},{"level":2,"title":"使用Dockerfile部署静态文件","slug":"使用dockerfile部署静态文件","link":"#使用dockerfile部署静态文件","children":[{"level":3,"title":"创建Dockerfile","slug":"创建dockerfile","link":"#创建dockerfile","children":[]},{"level":3,"title":"创建default.conf","slug":"创建default-conf","link":"#创建default-conf","children":[]},{"level":3,"title":"快捷脚本","slug":"快捷脚本","link":"#快捷脚本","children":[]},{"level":3,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]},{"level":3,"title":"整合命令","slug":"整合命令","link":"#整合命令","children":[]}]}],"relativePath":"tools/Docker.md"}'),e={name:"tools/Docker.md"},p=l(`<h1 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-hidden="true">#</a></h1><h2 id="安装docker-desktop" tabindex="-1">安装Docker Desktop <a class="header-anchor" href="#安装docker-desktop" aria-hidden="true">#</a></h2><h3 id="下载安装包" tabindex="-1">下载安装包 <a class="header-anchor" href="#下载安装包" aria-hidden="true">#</a></h3><p><a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noreferrer">官网下载安装包</a></p><h3 id="换源" tabindex="-1">换源 <a class="header-anchor" href="#换源" aria-hidden="true">#</a></h3><p>首先,我们打开Docker的设置，选择Docker Engine，设置docker镜像源</p><h4 id="国内docker镜像源" tabindex="-1">国内docker镜像源 <a class="header-anchor" href="#国内docker镜像源" aria-hidden="true">#</a></h4><ul><li>azure - <a href="http://dockerhub.azk8s.cn" target="_blank" rel="noreferrer">http://dockerhub.azk8s.cn</a></li><li>tencent - <a href="https://mirror.ccs.tencentyun.com" target="_blank" rel="noreferrer">https://mirror.ccs.tencentyun.com</a></li><li>daocloud - <a href="http://f1361db2.m.daocloud.io" target="_blank" rel="noreferrer">http://f1361db2.m.daocloud.io</a></li><li>netease - <a href="http://hub-mirror.c.163.com" target="_blank" rel="noreferrer">http://hub-mirror.c.163.com</a></li><li>ustc - <a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noreferrer">https://docker.mirrors.ustc.edu.cn</a></li><li>aliyun - <a href="https://2h3po24q.mirror.aliyuncs.com" target="_blank" rel="noreferrer">https://2h3po24q.mirror.aliyuncs.com</a></li></ul><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">registry-mirrors</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://docker.mirrors.ustc.edu.cn</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">insecure-registries</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[],</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">debug</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">experimental</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="docker基础使用" tabindex="-1">Docker基础使用 <a class="header-anchor" href="#docker基础使用" aria-hidden="true">#</a></h2><h3 id="官方示例" tabindex="-1">官方示例 <a class="header-anchor" href="#官方示例" aria-hidden="true">#</a></h3><p>入门教程，全自动生成本地学习docker网站</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">docker run -d -p 80:80 docker/getting-started</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="对docker操作" tabindex="-1">对Docker操作 <a class="header-anchor" href="#对docker操作" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 启动</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo service docker start</span></span>
<span class="line"><span style="color:#676E95;"># 重启</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo service docker restart</span></span>
<span class="line"><span style="color:#676E95;"># 停止</span></span>
<span class="line"><span style="color:#A6ACCD;">sudo service docker stop</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="对镜像操作" tabindex="-1">对镜像操作 <a class="header-anchor" href="#对镜像操作" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 获取镜像列表</span></span>
<span class="line"><span style="color:#A6ACCD;">docker images</span></span>
<span class="line"><span style="color:#676E95;"># 拉取镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">docker pull 镜像名称</span></span>
<span class="line"><span style="color:#676E95;"># 删除镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">docker rmi 镜像名称</span></span>
<span class="line"><span style="color:#676E95;"># 加载镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">docker run 镜像名称</span></span>
<span class="line"><span style="color:#676E95;"># 打包镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">docker build -t 镜像名称 路径</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="对容器操作" tabindex="-1">对容器操作 <a class="header-anchor" href="#对容器操作" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 查看容器</span></span>
<span class="line"><span style="color:#A6ACCD;">docker ps</span></span>
<span class="line"><span style="color:#676E95;"># 启动容器</span></span>
<span class="line"><span style="color:#A6ACCD;">docker start 容器名或id</span></span>
<span class="line"><span style="color:#676E95;"># 停止容器</span></span>
<span class="line"><span style="color:#A6ACCD;">docker stop 容器名或id</span></span>
<span class="line"><span style="color:#676E95;"># 强制关闭容器</span></span>
<span class="line"><span style="color:#A6ACCD;">docker </span><span style="color:#82AAFF;">kill</span><span style="color:#A6ACCD;"> 容器名或id</span></span>
<span class="line"><span style="color:#676E95;"># 删除容器</span></span>
<span class="line"><span style="color:#A6ACCD;">docker rm 容器名或id</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="容器制作成镜像" tabindex="-1">容器制作成镜像 <a class="header-anchor" href="#容器制作成镜像" aria-hidden="true">#</a></h3><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;"># 容器做成镜像</span></span>
<span class="line"><span style="color:#A6ACCD;">docker commit 容器名 镜像名</span></span>
<span class="line"><span style="color:#676E95;"># 镜像打包备份</span></span>
<span class="line"><span style="color:#A6ACCD;">docker save -o 保存的文件名 镜像名</span></span>
<span class="line"><span style="color:#676E95;"># 镜像解压</span></span>
<span class="line"><span style="color:#A6ACCD;">docker load -i 文件路径/备份文件</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="使用dockerfile部署静态文件" tabindex="-1">使用Dockerfile部署静态文件 <a class="header-anchor" href="#使用dockerfile部署静态文件" aria-hidden="true">#</a></h2><p>如：把vue编译产出的代码（dist文件夹）打包成docker镜像并加载</p><h3 id="创建dockerfile" tabindex="-1">创建Dockerfile <a class="header-anchor" href="#创建dockerfile" aria-hidden="true">#</a></h3><p>和dist文件夹放在一起</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"># 设置nginx</span></span>
<span class="line"><span style="color:#A6ACCD;">FROM nginx:latest</span></span>
<span class="line"><span style="color:#A6ACCD;"># 将dist文件夹中内容复制到 /usr/share/nginx/html 目录</span></span>
<span class="line"><span style="color:#A6ACCD;">COPY dist /usr/share/nginx/html</span></span>
<span class="line"><span style="color:#A6ACCD;"># 用本地的default.conf 配置文件替换nginx镜像里的默认配置</span></span>
<span class="line"><span style="color:#A6ACCD;">COPY default.conf /etc/nginx/conf.d/default.conf</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="创建default-conf" tabindex="-1">创建default.conf <a class="header-anchor" href="#创建default-conf" aria-hidden="true">#</a></h3><p>其中配置的8080作为docker内部的端口号</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">server {</span></span>
<span class="line"><span style="color:#A6ACCD;">    listen       8080;</span></span>
<span class="line"><span style="color:#A6ACCD;">    server_name  localhost;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    #charset koi8-r;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    #access_log  logs/host.access.log  main;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    location / {</span></span>
<span class="line"><span style="color:#A6ACCD;">        root   /usr/share/nginx/html/;</span></span>
<span class="line"><span style="color:#A6ACCD;">        index  index.html index.htm;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    #error_page  404              /404.html;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    # redirect server error pages to the static page /50x.html</span></span>
<span class="line"><span style="color:#A6ACCD;">    #</span></span>
<span class="line"><span style="color:#A6ACCD;">    error_page   500 502 503 504  /50x.html;</span></span>
<span class="line"><span style="color:#A6ACCD;">    location = /50x.html {</span></span>
<span class="line"><span style="color:#A6ACCD;">        root   /usr/share/nginx/html/;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>打包镜像</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">docker build -t docker-demo </span><span style="color:#82AAFF;">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>加载容器，端口号A:B，A是本机访问使用，B是docker镜像端口</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">docker run -dp 9002:8080 --name docker-demo docker-demo</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>打开浏览器可以查看<code>http://localhost:9002</code></p><h3 id="快捷脚本" tabindex="-1">快捷脚本 <a class="header-anchor" href="#快捷脚本" aria-hidden="true">#</a></h3><p><a href="http://clean.sh" target="_blank" rel="noreferrer">clean.sh</a></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#! /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 执行脚本需要传递参数，容器$1和镜像$2,只传递一个默认容器和镜像同名</span></span>
<span class="line"><span style="color:#A6ACCD;">container=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">image=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">2 </span><span style="color:#89DDFF;">];</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">image=</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">2</span></span>
<span class="line"><span style="color:#89DDFF;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">清理可能存在的同名容器</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">container</span><span style="color:#C3E88D;"> 和镜像</span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">image</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">停止容器</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">container</span></span>
<span class="line"><span style="color:#A6ACCD;">docker stop </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">container</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">删除容器</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">docker rm </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">container</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">删除镜像</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">docker rmi </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">image</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">清理结束</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># 正常退出，可执行后续操作</span></span>
<span class="line"><span style="color:#82AAFF;">exit</span><span style="color:#A6ACCD;"> 0</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-hidden="true">#</a></h3><p>A机生成镜像，打包成tar文件，发送到服务器B机</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">docker build -t docker-demo </span><span style="color:#82AAFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">docker save -o docker-demo.tar docker-demo</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>B机解压tar文件后加载镜像</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">docker load -i ./docker-demo.tar</span></span>
<span class="line"><span style="color:#A6ACCD;">docker run -dp 9002:8080 --name docker-demo docker-demo</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="整合命令" tabindex="-1">整合命令 <a class="header-anchor" href="#整合命令" aria-hidden="true">#</a></h3><p>package.json</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">docker-demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">docker-demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sh clean.sh docker-demo &amp;&amp; docker build -t docker-demo . &amp;&amp; docker run -dp 9002:8080 --name docker-demo docker-demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">save</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sh clean.sh docker-demo &amp;&amp; docker build -t docker-demo . &amp;&amp; docker save -o docker-demo.tar docker-demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">load</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sh clean.sh docker-demo &amp;&amp; docker load -i ./docker-demo.tar &amp;&amp; docker run -dp 9002:8080 --name docker-demo docker-demo</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">license</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ISC</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,45),r=[p];function o(c,t,i,d,u,b){return n(),a("div",null,r)}const C=s(e,[["render",o]]);export{y as __pageData,C as default};
